{"version":3,"sources":["components/Header/Auth.js","components/Header/Search.js","components/Header.js","modules/httpConnection/httpGetConnection.js","modules/url.js","components/Main/Note/Memo.js","modules/httpConnection/httpJsonConnection.js","components/Main/Note/NoteDetail.js","components/Main/Note.js","store.js","components/Main.js","components/Nav/Category.js","components/Nav.js","components/WholeNavModal.js","components/Login.js","App.js","serviceWorker.js","index.js"],"names":["Auth","className","Component","Search","type","Header","httpGetConnection","url","parameters","resSuc","resFail","a","plusParamsUrl","Object","keys","forEach","key","slice","length","console","log","fetch","method","headers","then","res","json","catch","err","Memo","state","title","props","memo","memoTitle","content","memoContent","this","_onDeleteClick","e","CURL","_memo","memoCode","Number","parseInt","noteCode","_newMemoList","memoListUpdate","_onUpdateClick","modify","document","getElementById","real","style","display","memoHour","memoTime","memoMin","id","onChange","setState","target","value","onClick","href","preventDefault","memoList","seekTo","dataset","memoVideoTime","httpJsonConnection","body","sendData","JSON","stringify","NoteDetail","youtubePlayer","_noteCode","note","_memoList","undefined","userEmail","alert","memoIndex","onStateChangeId","memosWithIndex","map","assign","index","_memoListUpdate","onClickMemoAdd","currentTime","getCurrentTime","redup","i","_onChangeVideoTime","_onTimeChange","youtubeVideoPlayer","clearTime","setInterval","clearTimeout","cTime","cMemo","filter","memoArray","onStateChange","videoId","noteURL","onReady","playVideo","setTimeout","getPlayerState","Note","onClickNoteExtend","onClickNoteExtendButton","NoteContent","parentElement","lastElementChild","button","innerHTML","firstChild","flexDirection","height","noteTitle","src","noteThumbnail","alt","noteContent","noteVideoName","noteVideoTime","noteUpdateDate","createStore","action","onExtendNavMod","onExtendMain","categoryArr","noteArr","categorySelected","login","window","__REDUX_DEVTOOLS_EXTENSION__","Main","mount","desc","store","subscribe","getState","nextProps","nextState","_categoryCode","categoryCode","responseJson","dispatch","notes","_onClickCancleButton","querySelectorAll","element","visibility","_onClickCreateButton","mouseOut","onMouseOut","onMouseEnter","placeholder","Category","category","subCategoryList","mainCategory","onClickCategoryContent","getAttribute","innerText","categoryName","push","Nav","_onExtendNavMod","_categoryArr","_categoryList","WholeNavModal","bind","childElementCount","children","item","opacity","pixel","clear","clearInterval","width","onClickNavCategoryTab","_onClickPlusSubcategory","_subcCategoryArr","concat","newCategoryArr","_categoryParent","main","sub","useremail","password","_onChangeEmail","_onChangePassword","onSubmit","elements","userPassword","Message","ResponseCode","tpye","styel","App","marginLeft","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.be9044a8.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {BsPeopleCircle} from 'react-icons/bs';\r\nimport './Auth.css';\r\n\r\nexport default class Auth extends Component {\r\n    render() {\r\n      return(\r\n        <div className=\"Auth\">\r\n            <BsPeopleCircle className=\"Auth-icon\"/>\r\n        </div>\r\n      )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport {RiSearchLine} from 'react-icons/ri';\r\nimport './Search.css';\r\n\r\nexport default class Search extends Component {\r\n    render() {\r\n      return(\r\n            <div className=\"Search\">\r\n                <input className=\"Search-text\" type=\"text\"></input>\r\n                <RiSearchLine className=\"Search-logo\"/>\r\n            </div>\r\n      )\r\n    }\r\n  }","import React, {Component} from 'react';\r\nimport Auth from './Header/Auth';\r\nimport Search from './Header/Search';\r\nimport './Header.css';\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n      return(\r\n        <div className=\"Header\">\r\n            <Search></Search>\r\n            <Auth></Auth>\r\n        </div>\r\n      )\r\n    }\r\n  }"," const httpGetConnection = async (url, parameters, resSuc, resFail) => {\r\n  let plusParamsUrl = url + '?';\r\n  //let plusParamsUrl = url;\r\n  // plus parameters\r\n  if (parameters !== null) {\r\n    let keys = Object.keys(parameters);\r\n    keys.forEach(key => {\r\n      plusParamsUrl += `${key}=${parameters[key]}&`\r\n    });\r\n    plusParamsUrl = plusParamsUrl.slice(0,plusParamsUrl.length-1);\r\n  }\r\n  console.log('cccc',plusParamsUrl);\r\n  let json = await fetch(plusParamsUrl, {\r\n    method: 'GET',\r\n    headers:{\r\n      'Authorization' : 'Bearer'\r\n    }\r\n  })\r\n    .then(res => res.json())\r\n    .catch(err => console.log(err));\r\n    resSuc(json);\r\n\r\n  // creation request\r\n  // let req = new XMLHttpRequest();\r\n  // // request open, with async option is true\r\n  // req.open('GET', plusParamsUrl, false);\r\n  // // set request-header authorization for cors\r\n  // req.setRequestHeader(\"Authorization\", \"Bearer\");\r\n  // req.onreadystatechange = (e) => {\r\n  //   switch (req.readyState) {\r\n  //     case XMLHttpRequest.UNSET:\r\n  //        console.log(\"현재 XMLHttpRequest 객체의 상태는 UNSET 입니다.<br>\");\r\n  //         break;\r\n  //     case XMLHttpRequest.OPENED:\r\n  //        console.log(\"현재 XMLHttpRequest 객체의 상태는 OPENED 입니다.<br>\");\r\n  //         break;\r\n  //     case XMLHttpRequest.HEADERS_RECIEVED:\r\n  //         console.log(\"현재 XMLHttpRequest 객체의 상태는 HEADERS_RECEIVED 입니다.<br>\");\r\n  //         break;\r\n  //     case XMLHttpRequest.LOADING:\r\n  //         console.log(\"현재 XMLHttpRequest 객체의 상태는 LOADING 입니다.<br>\");\r\n  //         break;\r\n  //     case XMLHttpRequest.DONE:\r\n  //         resSuc(req.responseText);\r\n  //         break;\r\n  //     default:\r\n  //         break;\r\n  //   }\r\n  // }\r\n  // req.send(null);\r\n return json;\r\n};\r\n\r\nexport default httpGetConnection;","//let url = {url: \"http://13.209.142.215:8080/PostProject_02/\"};\r\nlet url = {url: \"http://110.11.49.218:8080/myapp/\"};\r\nexport default url;","import React, { Component } from 'react';\r\nimport { AiFillDelete } from 'react-icons/ai';\r\nimport { GrUpdate } from 'react-icons/gr';\r\nimport httpGetConnection from '../../../modules/httpConnection/httpGetConnection';\r\nimport CURL from '../../../modules/url';\r\nimport './Memo.css';\r\n\r\nexport default class Memo extends Component {\r\n    state = {\r\n        title: this.props.memo.memoTitle,\r\n        content: this.props.memo.memoContent\r\n    }\r\n\r\n    render() {\r\n        let memo = this.props.memo;\r\n        let _onClickMemoVideoTime = (e) => {\r\n            e.preventDefault();\r\n            const memoList = document.getElementById(\"memoList\")\r\n            if (memoList.value !== \"\") {\r\n                memoList.value.seekTo(memo.memoTime);\r\n            }\r\n        }\r\n\r\n        let _onDeleteClick = async (e) => {\r\n            let url = CURL.url + 'deleteMemo';\r\n            let _memo = {\r\n                memoCode: Number.parseInt(memo.memoCode),\r\n                noteCode: Number.parseInt(memo.noteCode)\r\n            }\r\n            let _newMemoList = await httpGetConnection(url, _memo,\r\n                () => { },\r\n                () => { });\r\n\r\n            if (_newMemoList)\r\n                this.props.memoListUpdate(_newMemoList);\r\n        }\r\n\r\n        let _onUpdateDivClick = (e) => {\r\n            const modify = document.getElementById(`Memo-modify-${memo.memoCode}`);\r\n            const real = document.getElementById(`Memo-real-${memo.memoCode}`);\r\n            debugger;\r\n            if (modify.style.display === 'none' || modify.style.display === '' ) {\r\n                real.style.display = 'none'\r\n                modify.style.display = 'flex';\r\n            } else {\r\n                modify.style.display = 'none';\r\n                real.style.display = 'flex';\r\n            }\r\n        }\r\n\r\n        let _onUpdateClick = async (e) => {\r\n            const modify = document.getElementById(`Memo-modify-${memo.memoCode}`);\r\n            const real = document.getElementById(`Memo-real-${memo.memoCode}`);\r\n            \r\n            let url = CURL.url + 'updateMemo';\r\n            let _memo = {\r\n                memoTitle: this.state.title,\r\n                memoContent: this.state.content,\r\n                memoCode: Number.parseInt(memo.memoCode),\r\n                noteCode: Number.parseInt(memo.noteCode)\r\n            }\r\n            let _newMemoList = await httpGetConnection(url, _memo,\r\n                () => { },\r\n                () => { });\r\n            if (_newMemoList)\r\n                this.props.memoListUpdate(_newMemoList);\r\n            modify.style.display = 'none';\r\n            real.style.display = 'flex';\r\n        }\r\n\r\n        let _onChangeTitle = (e) => {\r\n            this.setState({\r\n                title: e.target.value\r\n            });\r\n        }\r\n        let _onChageContent = (e) => {\r\n            this.setState({\r\n                content: e.target.value\r\n            });\r\n        }\r\n        let memoHour = Number.parseInt(memo.memoTime / 60);\r\n        if(memoHour<10) memoHour = '0' + memoHour;\r\n        let memoMin = memo.memoTime % 60;\r\n        if(memoMin<10) memoMin = '0' + memoMin;\r\n\r\n        return (\r\n            <div className=\"Memo\">\r\n                <div id={\"Memo-modify-\"+ memo.memoCode} className=\"Memo-modify\">\r\n                    <input className=\"current-memo-title common\"\r\n                        onChange={_onChangeTitle} value={this.state.title}></input>\r\n                    <input className=\"current-memo-content common\"\r\n                        onChange={_onChageContent} value={this.state.content}></input>\r\n                    <button onClick={_onUpdateClick}>update</button>\r\n                </div>\r\n                <div id={\"Memo-real-\"+ memo.memoCode} className=\"Memo-real\">\r\n                    <div className=\"MemoTitle\">\r\n                        {memo.memoTitle}\r\n                    </div>\r\n                    <div className=\"MemoDesc\">{memo.memoContent}</div>\r\n                </div>\r\n                <div className=\"Memo-etc\">\r\n                    <a href=\"/content\" className=\"MemoVideoTime\" onClick={_onClickMemoVideoTime} dataset={{ value: memo.memoVideoTime }}>\r\n                        <div value={memo.memoTime}>{`${memoHour}:${memoMin}`} </div>\r\n                    </a>\r\n                    <button className=\"update Memo-button\" onClick={_onUpdateDivClick}><GrUpdate   /></button>\r\n                    <button className=\"delete Memo-button\" onClick={_onDeleteClick}><AiFillDelete  /></button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","const httpJsonConnection = async (url, body, resSuc, resFail) => {\r\n    console.log('cccc',url);    \r\n    \r\n    let sendData = JSON.stringify(body);\r\n    let json = await fetch(url, {\r\n      method: 'POST',\r\n      body: sendData,\r\n      headers:{\r\n        'Content-Type': 'application/json',\r\n        'Authorization' : 'Bearer',\r\n      }\r\n    })\r\n      .then(res => res.json())\r\n      .catch(err =>console.log(`${err}`));\r\n\r\n   return json;\r\n  };\r\n  \r\n  export default httpJsonConnection;","import React, { Component } from 'react';\r\nimport Memo from './Memo';\r\nimport Youtube from 'react-youtube';\r\nimport httpGetConnection from '../../../modules/httpConnection/httpGetConnection';\r\nimport httpJsonConnection from '../../../modules/httpConnection/httpJsonConnection';\r\nimport CURL from '../../../modules/url';\r\nimport './NoteDetail.css';\r\n\r\n\r\n\r\nexport default class NoteDetail extends Component {\r\n    state = {\r\n        memoList: [],\r\n        title: \"This will be Title section\",\r\n        content: \"This will be Content section\",\r\n        youtubePlayer: null\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let _noteCode = this.props.note.noteCode\r\n        let _memoList = [];\r\n        if (_noteCode !== undefined | null) {\r\n            let url = CURL.url + \"getNoteItems\"\r\n          _memoList = await httpGetConnection(url, { userEmail: 'vrimd1017@gmail.com', noteCode: _noteCode },\r\n            () =>{}\r\n            ,\r\n            () => { alert(\"Connection Fail\") }\r\n          )\r\n        }\r\n        this.setState({memoList:_memoList});\r\n    }\r\n\r\n    render() {\r\n        let memoIndex = -1;\r\n        let onStateChangeId = null;\r\n\r\n        let memosWithIndex = this.state.memoList.map(memo => Object.assign(memo, { index: ++memoIndex }))\r\n        let _onReady = (e) => {\r\n            this.setState({youtubePlayer: e.target});\r\n            e.target.playVideo();\r\n            const memoList = document.getElementById(\"memoList\");\r\n            memoList.value = e.target;\r\n            onStateChangeId = true;\r\n            setTimeout(_onTimeChange(e.target), 100);\r\n        }\r\n\r\n        let _memoListUpdate = (_memoList) => {\r\n            this.setState({memoList: _memoList});\r\n        }\r\n\r\n        let onClickMemoAdd = async (e) => {\r\n            if (this.state.youtubePlayer !== null) {\r\n                let url = CURL.url + 'insertMemo2';\r\n                let currentTime = Number.parseInt(this.state.youtubePlayer.getCurrentTime());\r\n                let redup = false;\r\n                for(let i=0; i<memosWithIndex.length; i++) {\r\n                    if(currentTime===Number.parseInt(memosWithIndex[i].memoTime)) redup = true;\r\n                }\r\n                if(redup) {alert(\"reduplication\"); return;}\r\n                let _memo= { memoTitle: this.state.title, \r\n                             memoContent:this.state.content, \r\n                             memoTime:currentTime,\r\n                             noteCode: Number.parseInt(this.props.noteCode)\r\n                            };\r\n                //JSON.stringify(_memo);\r\n                let _newMemoList = await httpGetConnection(url, _memo,\r\n                   ()=>{},\r\n                   ()=>{});\r\n\r\n                if(_newMemoList)\r\n                   _memoListUpdate(_newMemoList);\r\n            }\r\n        }\r\n\r\n        let _onChangeTitle = (e) => {\r\n            this.setState({\r\n                title: e.target.value\r\n            });\r\n        }\r\n        let _onChageContent = (e) => {\r\n            this.setState({\r\n                content: e.target.value\r\n            });\r\n        }\r\n\r\n        let _onChangeVideoTime = (index) => {\r\n            this.setState({\r\n                title: memosWithIndex[index].memoTitle,\r\n                content: memosWithIndex[index].memoContent\r\n            });\r\n            memoIndex = index;\r\n        }\r\n\r\n        let _onStateChange = (e) => {\r\n            onStateChangeId = false;\r\n            let cState = e.target.getPlayerState();\r\n            switch(cState) {\r\n                case -1:\r\n                    // 시작되지 않음\r\n                    break;\r\n                case 0:\r\n                    // 종료\r\n                    break;\r\n                case 1:\r\n                    onStateChangeId=true; setTimeout(_onTimeChange(e.target), 100);\r\n                    // 재생중\r\n                    break;\r\n                case 2:\r\n                    // 일시중지\r\n                    break;\r\n                case 3:\r\n                    // 버퍼링\r\n                    break;\r\n                case 5:\r\n                    // 버퍼링\r\n                    break\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        \r\n\r\n        let _onTimeChange = (youtubeVideoPlayer) => {\r\n            let clearTime = setInterval(() => {\r\n                    if(!onStateChangeId) clearTimeout(clearTime);\r\n                    let cTime = Number.parseInt(youtubeVideoPlayer.getCurrentTime());\r\n                    let cMemo = memosWithIndex.map(memo => memo).filter(memo => memo.memoTime === cTime);\r\n                    if (cMemo.length > 0) {\r\n                        this.setState({\r\n                            title: cMemo[0].memoTitle,\r\n                            content: cMemo[0].memoContent\r\n                        });\r\n                    }\r\n                }, 500);\r\n        }\r\n\r\n        let memoArray = memosWithIndex.map(memo => <Memo onStateChange={_onChangeVideoTime} memoListUpdate={_memoListUpdate} key={memo.memoCode} memo={memo} />);\r\n        return (\r\n            <div className=\"NoteDetail\">\r\n                <div className=\"YoutubeVideo\">\r\n                    <Youtube className=\"YoutubeVideoI\" videoId={this.props.note.noteURL} onReady={_onReady} onStateChange={_onStateChange} />\r\n                    <div className=\"current-memo\">\r\n                        <div>\r\n                            <input className=\"current-memo-title common\" \r\n                                 onChange={_onChangeTitle} value={this.state.title}></input>\r\n                            <input className=\"current-memo-content common\" \r\n                                 onChange={_onChageContent} value={this.state.content}></input>\r\n                        </div>\r\n                        <button className=\"memo-add-button\" onClick={onClickMemoAdd}>ADD</button>\r\n                    </div>\r\n                </div>\r\n                <div id=\"memoList\" className=\"MemoList\" value=\"\">\r\n                    {memoArray}\r\n                </div> \r\n            </div>\r\n        )\r\n    };\r\n}","import React, { Component } from 'react';\r\nimport NoteDetail from './Note/NoteDetail';\r\nimport './Note.css';\r\n\r\nexport default class Note extends Component {\r\n  state = {\r\n    onClickNoteExtend: false\r\n  }\r\n\r\n  render() {\r\n    let onClickNoteExtendButton = (e) => {\r\n      const NoteContent = e.target.parentElement.parentElement.lastElementChild;\r\n      const Note = e.target.parentElement.parentElement;\r\n      let button = e.target;\r\n      \r\n      // if click thumbnail\r\n      if(e.target.innerHTML === \"\") {\r\n          button = e.target.parentElement.parentElement.firstChild.lastElementChild;\r\n      }\r\n\r\n      if (button.innerHTML === \"▼\") {\r\n        NoteContent.style.flexDirection=\"column\";\r\n        button.innerHTML = \"▲\";\r\n       Note.style.height = \"450px\";\r\n        this.setState({ onClickNoteExtend: true });\r\n      } else {\r\n        NoteContent.style.flexDirection=\"row\";\r\n        button.innerHTML = \"▼\";\r\n        Note.style.height = \"150px\";\r\n        this.setState({ onClickNoteExtend: false });\r\n      }\r\n    }\r\n\r\n\r\n    return (\r\n      <div className=\"Note\">\r\n        <div className=\"Note-header\">\r\n          <div className=\"Note-header-title\">{this.props.Note.noteTitle} </div>\r\n          <button id=\"Note-extend-button-id1\" className=\"Note-button\" onClick={onClickNoteExtendButton}>▼</button>\r\n        </div>\r\n        <div className=\"Note-content\">\r\n          {this.state.onClickNoteExtend ? <NoteDetail note={this.props.Note} key={this.props.Note.noteCode} noteCode={this.props.Note.noteCode}></NoteDetail> : \r\n            <img className=\"Note-content-thumbnail\" src={this.props.Note.noteThumbnail} alt=\"thumbnail\" onClick={onClickNoteExtendButton}/>}\r\n          <div className=\"Note-content-desc\">\r\n            <div className=\"Note-content-desc-info\">{this.props.Note.noteContent}</div>\r\n            <div className=\"Note-content-time\">\r\n              <div>{this.props.Note.noteVideoName} {this.props.Note.noteVideoTime} </div>\r\n              <div className=\"Note-content-time-updated\">{this.props.Note.noteUpdateDate}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import {createStore} from 'redux';\r\n\r\n//createstore 안의 function은 reducer\r\nexport default createStore(function(state, action) {\r\n    if(state === undefined) {\r\n        return  {\r\n            onExtendNavMod: false,\r\n            onExtendMain: false,\r\n            categoryArr: [],\r\n            noteArr  : [],\r\n            categorySelected: false,\r\n            login: false\r\n        }        \r\n    }\r\n\r\n    switch(action.type) {\r\n        case 'LOGIN':\r\n            return Object.assign(state,{login: action.login}); \r\n        case 'CATEGORYS_LOAD':\r\n            return Object.assign(state,{categoryArr:action.categoryArr});\r\n        case 'NOTES_LOAD':\r\n            return Object.assign(state,{noteArr:action.noteArr});\r\n        case 'NOTES_LOADED':\r\n            return Object.assign(state,{noteArr:action.noteArr});\r\n        case 'EXTEND_NAV':\r\n            return Object.assign(state,{onExtendNavMod:action.onExtendNavMod});\r\n        case 'EXTEND_MAIN':\r\n            return Object.assign(state,{onExtendMain: action.onExtendMain});\r\n        case 'SELECTED_CATEGORY':\r\n            return Object.assign(state,{categorySelected:action.categorySelected});\r\n        default:\r\n            break;\r\n    }\r\n    return state;\r\n},window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())","\r\nimport React, { Component } from 'react';\r\nimport Note from './Main/Note'\r\nimport './Main.css';\r\nimport store from '../store';\r\nimport httpGetConnection from '../modules/httpConnection/httpGetConnection';\r\nimport CURL from '../modules/url';\r\nimport httpJsonConnection from '../modules/httpConnection/httpJsonConnection';\r\n\r\nexport default class Main extends Component {\r\n  mount = false;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: \"\",\r\n      desc: \"\",\r\n      url: \"\",\r\n    }\r\n\r\n    store.subscribe(() => {\r\n      if (this.mount) {\r\n        this.setState(store.getState());\r\n      }\r\n    });\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n\r\n    return true;\r\n  }\r\n\r\n\r\n  async componentDidMount() {\r\n    this.mount = true;\r\n\r\n    let _categoryCode = store.getState().categorySelected;\r\n    if (_categoryCode !== false) {\r\n      let url = `${CURL.url}getCategoryItems`;\r\n      httpGetConnection(url, { userEmail: 'vrimd1017@gmail.com', categoryCode: _categoryCode },\r\n        (responseJson) => {\r\n          store.dispatch({\r\n            type: \"NOTES_LOADED\",\r\n            noteArr: responseJson\r\n          })\r\n        },\r\n        () => { alert(\"Connection Fail\") }\r\n      )\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let _onClickNoteCreateButton = (e) => {\r\n      let NoteCreate = document.querySelectorAll('.Note-create');\r\n      NoteCreate.forEach(element => {\r\n        element.style.visibility = 'visible';\r\n      })\r\n    }\r\n\r\n    let _onClickCancleButton = (e) => {\r\n      let NoteCreate = document.querySelectorAll('.Note-create');\r\n      NoteCreate.forEach(element => {\r\n        element.style.visibility = 'hidden';\r\n      });\r\n    }\r\n\r\n    let _onClickCreateButton = async (e) => {\r\n      let url = `${CURL.url}insertNote`;\r\n      let json = {\r\n        'noteTitle': this.state.title,\r\n        'noteContent': this.state.desc,\r\n        'noteUrl': this.state.url,\r\n        'noteCategory': store.getState().categorySelected\r\n      }\r\n      let response = httpJsonConnection(url, json,\r\n        () => { }, () => { });\r\n      store.dispatch({ type: 'EXTEND_MAIN', onExtendMain: false });\r\n      store.dispatch({ type: 'SELECTED_CATEGORY', categorySelected: store.getState().categorySelected });\r\n    }\r\n\r\n    let mouseOut = false;\r\n\r\n    let _onMouseOut = (e) => {\r\n      mouseOut = true;\r\n    }\r\n\r\n    let _onMouseOver = (e) => {\r\n      mouseOut = false;\r\n    }\r\n\r\n    let _onClickOuter = (e) => {\r\n      if (mouseOut)\r\n        _onClickCancleButton();\r\n    }\r\n\r\n    let _onChangeTitle = (e) => {\r\n      this.setState({title: e.target.value});\r\n    }\r\n\r\n    let _onChangeDesc = (e) => {\r\n      this.setState({desc: e.target.value});\r\n    }\r\n\r\n    let _onChangeURL = (e) => {\r\n      this.setState({url: e.target.value});\r\n    }\r\n\r\n    let notes = [];\r\n    notes = this.props.noteArr.map(\r\n      note => (<Note key={note.noteCode} Note={note}></Note>)\r\n    );\r\n    return (\r\n      <div className=\"Main\">\r\n        <div className=\"Note-craete-outer Note-create\" onClick={_onClickOuter}></div>\r\n        <div className=\"Note-create-in Note-create\" onMouseOut={_onMouseOut} onMouseEnter={_onMouseOver}>\r\n          <h1>Create NOTE</h1>\r\n          <input type=\"text\" value={this.state.title} onChange={_onChangeTitle} placeholder=\"Note title\" />\r\n          <input type=\"text\" value={this.state.desc} onChange={_onChangeDesc} placeholder=\"Note Description\" />\r\n          <input type=\"text\" value={this.state.url} onChange={_onChangeURL} placeholder=\"Video url\" />\r\n          <div className=\"Note-create-buttons\">\r\n            <button className=\"Note-create-button\" onClick={_onClickCancleButton}>CANCLE</button>\r\n            <button className=\"Note-create-button\" onClick={_onClickCreateButton}>CREATE</button>\r\n          </div>\r\n        </div>\r\n        <div className=\"Note-tool\">\r\n          <label className=\"button-layout\">\r\n            노트 생성\r\n              <button className=\"tool-button\" onClick={_onClickNoteCreateButton}>+</button>\r\n          </label>\r\n          <label className=\"button-layout\">\r\n            노트 삭제\r\n          <button className=\"tool-button\">-</button>\r\n          </label>\r\n        </div>\r\n        {store.getState().categorySelected ?\r\n          notes : <p>카테고리 선택해라옹</p>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport store from '../../store';\r\nimport './Category.css';\r\n\r\nexport default class Category extends Component {\r\n  shouldComponentUpdate() {\r\n\r\n  }\r\n  \r\n  render() {\r\n    let category = null;\r\n    let subCategoryList = [];\r\n    let mainCategory = this.props.category;\r\n    \r\n    let onClickCategoryExtend = (e) => {\r\n      if (e.target.innerText === \"▼\") {\r\n        e.target.innerText = \"▲\";\r\n        mainCategory.categoryArr.forEach(element => {\r\n          document.getElementById('Category-sub-' + element.categoryCode).style.display = 'flex';\r\n    \r\n        });\r\n      } else if (e.target.innerText === \"▲\") {\r\n        e.target.innerText = \"▼\";\r\n        mainCategory.categoryArr.forEach(element => {\r\n          document.getElementById('Category-sub-' + element.categoryCode).style.display = 'none';\r\n        });\r\n      }\r\n    }\r\n\r\n    let onClickCategoryContent = (e) => {\r\n      store.dispatch({ type: 'EXTEND_MAIN', onExtendMain: false });\r\n      store.dispatch({ type: 'SELECTED_CATEGORY', categorySelected: e.target.getAttribute('value') });\r\n    }\r\n\r\n    if (mainCategory !== undefined) {\r\n      category =\r\n        <div className=\"Category\">\r\n          <div className=\"Category-main\" onClick={onClickCategoryExtend}>\r\n            <button id={\"Category-main-button\" + mainCategory.categoryCode} className=\"Category-button\" >▼</button>\r\n            <div className=\"Category-content\" onClick={onClickCategoryContent} value={mainCategory.categoryCode}>{mainCategory.categoryName}</div>\r\n          </div>\r\n          {mainCategory.categoryArr.forEach(element => {\r\n            subCategoryList.push(<div key={element.categoryCode} id={\"Category-sub-\" + element.categoryCode} className=\"Category-sub\">\r\n              <div className=\"Category-content\" onClick={onClickCategoryContent} value={element.categoryCode}>{element.categoryName}</div>\r\n            </div>)\r\n          })}\r\n          {subCategoryList}\r\n        </div>\r\n    }\r\n\r\n    return (\r\n      <li className=\"Nav-category-item\">\r\n        {category}\r\n      </li>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react';\r\nimport store from '../store';\r\nimport Category from './Nav/Category';\r\nimport './Nav.css';\r\nimport httpGetConnection from '../modules/httpConnection/httpGetConnection';\r\nimport CURL from '../modules/url';\r\nimport {FaExpandArrowsAlt, FaRegStickyNote} from 'react-icons/fa';\r\nimport {GiFootPlaster} from 'react-icons/gi';\r\n\r\nexport default class Nav extends Component {\r\n  mount = false;\r\n  constructor(props) {\r\n    super(props);\r\n    store.subscribe(()=>{\r\n        if(this.mount) {\r\n          this.setState(store.getState());\r\n        }\r\n    });\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if(this.props.categoryArr === nextProps.categoryArr) \r\n        return false;\r\n    return true;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.mount = true;\r\n    //let url =\"http://localhost:9000\";\r\n    let url = CURL.url +\"getusercategorylist\";\r\n    //let url =  \"http://110.11.49.218:8080/myapp/getusercategorylist\";\r\n    httpGetConnection(url, {userEmail:'vrimd1017@gmail.com'}, \r\n     (responseJson)=>{\r\n       store.dispatch({type:\"CATEGORYS_LOAD\", \r\n       categoryArr : responseJson\r\n     })},\r\n       () => {alert(\"Connection Fail\")}\r\n     ); \r\n  }\r\n  \r\n    render() { \r\n\r\n      let _onExtendNavMod =store.getState().onExtendNavMod;\r\n      let _categoryArr = this.props.categoryArr;\r\n      let _categoryList = [];\r\n\r\n      if(_categoryArr !== undefined) {\r\n         _categoryArr.forEach(element => {\r\n            _categoryList.push(<Category key={element.categoryCode} category={element}/>);\r\n         });\r\n      }\r\n      let onClickNavCategoryTab = e => {\r\n          store.dispatch({type:'EXTEND_NAV', onExtendNavMod:  !_onExtendNavMod});\r\n      }\r\n\r\n      return(\r\n        <div className=\"Nav\">\r\n          <FaRegStickyNote className=\"Nav-home\"/>\r\n          <FaExpandArrowsAlt \r\n            className=\"Nav-category-tab\" onClick={onClickNavCategoryTab}/>\r\n          <ul className=\"Nav-category-items\">\r\n              {_categoryList}\r\n          </ul>\r\n          <GiFootPlaster className=\"Nav-category-foot\" />\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  ","import React, { Component } from 'react';\r\nimport store from '../store';\r\nimport { BsArrowsAngleContract, BsFillPlusCircleFill, BsFillXCircleFill} from 'react-icons/bs';\r\nimport './WholeNavModal.css';\r\n\r\nexport default class WholeNavModal extends Component {\r\n  mount = false;\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    store.subscribe(() => {\r\n      if (this.mount) {\r\n        this.setState(store.getState());\r\n      }\r\n    }).bind(this);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.mount = true;\r\n    const WholeNavModal = document.getElementById(\"WholeNavModelId\");\r\n    for (let i = 0; i < WholeNavModal.childElementCount; i++)\r\n      WholeNavModal.children.item(i).style.opacity = \"0\";\r\n    WholeNavModal.style.display = \"flex\";\r\n\r\n    setTimeout(() => {\r\n      let pixel = 0;\r\n      let clear = setInterval(() => {\r\n        if (pixel === 400) {\r\n          setInterval(() => {\r\n            for (let i = 0; i < WholeNavModal.childElementCount; i++)\r\n              WholeNavModal.children.item(i).style.opacity = \"100\";\r\n          }, 200);\r\n          clearInterval(clear);\r\n        }\r\n        pixel += 50;\r\n        WholeNavModal.style.width = `${pixel}px`;\r\n        WholeNavModal.style.height = `${pixel}px`;\r\n\r\n      }, 30);\r\n    }, 20);\r\n  }\r\n\r\n  render() {\r\n    let mouseOut = false;\r\n\r\n    let onClickNavCategoryTab = e => {\r\n      store.dispatch({ type: 'EXTEND_NAV', onExtendNavMod: false });\r\n    }\r\n\r\n    let onClickCategoryContent = (e) => {\r\n      store.dispatch({ type: 'EXTEND_MAIN', onExtendMain: false });\r\n      store.dispatch({ type: 'SELECTED_CATEGORY', categorySelected: e.target.getAttribute('value') });\r\n      onClickNavCategoryTab();\r\n    }\r\n\r\n    let _onMouseOut = (e) => {\r\n      mouseOut = true;\r\n    }\r\n\r\n    let _onMouseOver = (e) => {\r\n      mouseOut = false;\r\n    }\r\n\r\n    let _onClickOuter = (e) => {\r\n      if(mouseOut)\r\n        onClickNavCategoryTab();\r\n    }\r\n\r\n    let _onClickPlusSubcategory = (e) => {\r\n      let index = Number.parseInt(e.target.value);\r\n      debugger;\r\n      let _subcCategoryArr = _categoryArr[index].categoryArr.concat([{categoryName:\"1\", categoryCode:3}]);\r\n      let newCategoryArr = _categoryArr.map((item)=>item);\r\n      newCategoryArr[index].categoryArr = _subcCategoryArr;\r\n      this.setState({categoryArr: newCategoryArr});\r\n    }\r\n\r\n    let _categoryArr = this.props.categoryArr;\r\n    let _categoryParent = [];\r\n    let index = 0;\r\n\r\n    if (_categoryArr !== undefined) {\r\n      _categoryArr.forEach(main => {\r\n        let subCategoryList = [];\r\n        main.categoryArr.forEach(sub => {\r\n          subCategoryList.push(<div key={sub.categoryName} className=\"whole-category-sub wholeCategory\"> \r\n            <span value={sub.categoryCode} onClick={onClickCategoryContent}>{sub.categoryName}</span>\r\n            <button className=\"whole-category-sub-button wholeNavButton\">-</button>\r\n            </div>)\r\n        });\r\n        _categoryParent.push(\r\n          <div key={main.categoryName} className=\"whole-category-parent\">\r\n            <div key={main.categoryName} className=\"whole-category-main wholeCategory\">\r\n              <span value={main.categoryCode} onClick={onClickCategoryContent}>{main.categoryName}</span>\r\n                <button className=\"plusCategory whole-category-main-button wholeNavButton\"  value={index++} onClick={_onClickPlusSubcategory}>+</button>\r\n                <button className=\"minusCategory whole-category-main-button wholeNavButton\">-</button>\r\n            </div>\r\n            {subCategoryList}\r\n          </div>\r\n        )\r\n      });\r\n    }\r\n\r\n\r\n    return (\r\n      <div id=\"WholeNavModelId\" className=\"WholeNavModal\" onMouseOut={_onMouseOut} onMouseEnter={_onMouseOver}>\r\n        <div className=\"WholeNavModal-content\">\r\n          <button className=\"WholeNavModal-exit-button\"\r\n            onClick={onClickNavCategoryTab}><BsArrowsAngleContract /></button>\r\n          {_categoryParent}\r\n        </div>\r\n        <div className=\"WholeNavModeOuter\" onClick={_onClickOuter} />\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport httpJsonConnection from '../modules/httpConnection/httpJsonConnection';\r\nimport CURL from '../modules/url';\r\nimport store from '../store';\r\n\r\nimport './Login.css';\r\n\r\nexport default class extends Component {\r\n    state = {\r\n        useremail: \"\",\r\n        password: \"\",\r\n    }\r\n    render() {\r\n        let _onChangeEmail = (e) => {\r\n            this.setState({ useremail: e.target.value });\r\n        }\r\n\r\n        let _onChangePassword = (e) => {\r\n            this.setState({ password: e.target.value });\r\n        }\r\n\r\n        let _onLoginSubmitClick = (e) => {\r\n            e.preventDefault();\r\n            let url = `${CURL.url}login`;\r\n            let json = {\r\n                userEmail: e.target.elements[0].value,\r\n                userPassword: e.target.elements[0].value\r\n            }\r\n            let response = httpJsonConnection(url, json,\r\n                () => { }, () => { });\r\n            response.then(res => {\r\n                alert(res.Message);\r\n                if (res.ResponseCode === 200) {\r\n                    store.dispatch({ type: 'LOGIN', login: true });\r\n                }\r\n            });\r\n        }\r\n\r\n        let _onSignSubmitClick = (e) => {\r\n            e.preventDefault();\r\n            let url = `${CURL.url}registUser`;\r\n            let json = {\r\n                userEmail: e.target.elements[0].value,\r\n                userPassword: e.target.elements[0].value\r\n            }\r\n            let response = httpJsonConnection(url, json,\r\n                () => { }, () => { });\r\n            response.then(res => {\r\n                alert(res.Message);\r\n                if (res.ResponseCode === 200) {\r\n                    document.getElementById('')\r\n                    const SignForm = document.getElementById('SignForm');\r\n                    SignForm.style.visibility = 'hidden';\r\n                }\r\n            });\r\n        }\r\n\r\n        let _onClickSignButton = (e) => {\r\n            const SignForm = document.getElementById('SignForm');\r\n            SignForm.style.visibility = 'visible';\r\n        }\r\n\r\n        let _onClickCancleButton = (e) => {\r\n            const SignForm = document.getElementById('SignForm');\r\n            SignForm.style.visibility = 'hidden';\r\n        }\r\n\r\n        return (\r\n            <div className=\"Login\" >\r\n                <span className=\"outerForm\"></span>\r\n                <form className=\"LoginForm\" src=\"/content\" method=\"POST\" onSubmit={_onLoginSubmitClick}>\r\n                    <h1>LOGIN</h1>\r\n                    <div className=\"textbox\">\r\n                        <label>\r\n                            Email:\r\n                    <input className=\"email input\" type=\"text\" value={this.state.useremail}\r\n                                onChange={_onChangeEmail} placeholder=\"useremail@example.com\" />\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"textbox\">\r\n                        <label>\r\n                            Password:\r\n                    <input className=\"password input\" type=\"password\" value={this.state.password}\r\n                                onChange={_onChangePassword} />\r\n                        </label>\r\n                    </div>\r\n                    <div style={{ display: \"flex\" }}>\r\n                        <input className=\"sign input\" tpye=\"button\" value=\"SIGNUP\" onClick={_onClickSignButton} />\r\n                        <input className=\"submit input\" type=\"submit\" value=\"GO\" />\r\n                    </div>\r\n                </form>\r\n                <form id=\"SignForm\" className=\"SignForm\" src=\"/content\" method=\"POST\" onSubmit={_onSignSubmitClick}>\r\n                    <h1>SIGN</h1>\r\n                    <div className=\"textbox\" >\r\n                        <label>\r\n                            Email:\r\n                    <input className=\"email input\" type=\"text\" value={this.state.useremail}\r\n                                onChange={_onChangeEmail} placeholder=\"useremail@example.com\" />\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"textbox\">\r\n                        <label>\r\n                            Password:\r\n                    <input className=\"password input\" type=\"password\" value={this.state.password}\r\n                                onChange={_onChangePassword} />\r\n                        </label>\r\n                    </div>\r\n                    <div styel={{ display: \"flex\" }}>\r\n                        <input className=\"sign input\" tpye=\"button\" value=\"CANCEL\" onClick={_onClickCancleButton} />\r\n                        <input className=\"submit input\" type=\"submit\" value=\"SIGNUP\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport Nav from './components/Nav';\nimport WholeNavModal from './components/WholeNavModal';\nimport Login from './components/Login';\n\nimport './App.css';\nimport store from './store';\n\nclass App extends Component {\n  mount = false;\n  constructor(props) {\n    super(props);\n    this.state = {\n      onExtendNavMod: false,\n      onExtendMain: false,\n      categoryArr: [],\n      noteArr: [],\n      categorySelected: false,\n      login: false,\n    }\n\n    store.subscribe(function () {\n      if (this.mount === true) {\n        this.setState(store.getState())\n      }\n    }.bind(this));\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.state.categorySelected === false && nextState.categorySelected === false)\n      return true;\n    if (this.state.categorySelected !== nextState.categorySelected) {\n      return true;\n    }\n    if (this.state === nextState) return false;\n    return true;\n  }\n\n  componentDidMount() {\n    this.mount = true;\n  }\n\n  componentDidUpdate() {\n    if (this.state.categorySelected !== false && this.state.onExtendMain === false) {\n      store.dispatch({ type: \"EXTEND_MAIN\", onExtendMain: true })\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {\n          (() => {\n            if (this.state.login) {\n              return (\n                <body>\n                  <Header></Header>\n                  <Nav categoryArr={this.state.categoryArr}></Nav>\n                  {this.state.onExtendMain ? <Main noteArr={this.state.noteArr}></Main> : <div style={{marginLeft: '100px'}}>category 생성or선택</div>}\n                  {this.state.onExtendNavMod ? <WholeNavModal categoryArr={this.state.categoryArr} /> : null}\n                </body>\n              )\n            } else {\n              return(\n                <Login/>\n              )\n            }\n          })()\n        }\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}