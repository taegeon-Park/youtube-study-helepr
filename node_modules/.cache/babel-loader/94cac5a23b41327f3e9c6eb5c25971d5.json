{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\test-study-redux\\\\src\\\\components\\\\Main.js\";\nimport React, { Component } from 'react';\nimport Note from './Main/Note';\nimport './Main.css';\nimport store from '../store';\nimport httpGetConnection from '../modules/httpConnection/httpGetConnection';\nexport default class Main extends Component {\n  constructor(props) {\n    super(props);\n    this.mount = false;\n    this.state = store.getState();\n    store.subscribe(() => {\n      if (this.mount) {\n        let _state = store.getState();\n\n        this.setState(_state);\n      }\n    });\n  } // shouldComponentUpdate(nextProps, nextState) {\n  //   if (this.state === null) return false;\n  //   console.log('hi', this.state.categorySelected);\n  //   return true;\n  // }\n\n\n  async componentDidMount() {\n    this.mount = true;\n    console.log(\"zzzzzzzzzz\", this.state);\n  }\n\n  async componentDidUpdate() {}\n\n  render() {\n    let notes = [];\n    notes = this.state.noteArr.map(note => /*#__PURE__*/React.createElement(Note, {\n      key: note.noteId,\n      Note: note,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 16\n      }\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, store.getState().categorySelected ? notes : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 19\n      }\n    }, \"\\uCE74\\uD14C\\uACE0\\uB9AC \\uC120\\uD0DD\\uD574\\uB77C\\uC639\"));\n  }\n\n}","map":{"version":3,"sources":["D:/react/test-study-redux/src/components/Main.js"],"names":["React","Component","Note","store","httpGetConnection","Main","constructor","props","mount","state","getState","subscribe","_state","setState","componentDidMount","console","log","componentDidUpdate","render","notes","noteArr","map","note","noteId","categorySelected"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAO,YAAP;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,iBAAP,MAA8B,6CAA9B;AAEA,eAAe,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AAE1CK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SADnBC,KACmB,GADX,KACW;AAEjB,SAAKC,KAAL,GAAaN,KAAK,CAACO,QAAN,EAAb;AAEAP,IAAAA,KAAK,CAACQ,SAAN,CAAgB,MAAM;AACpB,UAAI,KAAKH,KAAT,EAAgB;AACd,YAAII,MAAM,GAAGT,KAAK,CAACO,QAAN,EAAb;;AACA,aAAKG,QAAL,CAAcD,MAAd;AACD;AACF,KALD;AAMD,GAZyC,CAc1C;AACA;AACA;AAEA;AACA;;;AAGD,QAAME,iBAAN,GAA0B;AACvB,SAAKN,KAAL,GAAa,IAAb;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyB,KAAKP,KAA9B;AACD;;AAEH,QAAMQ,kBAAN,GAA2B,CAE1B;;AAECC,EAAAA,MAAM,GAAG;AACP,QAAIC,KAAK,GAAG,EAAZ;AACAA,IAAAA,KAAK,GAAG,KAAKV,KAAL,CAAWW,OAAX,CAAmBC,GAAnB,CACNC,IAAI,iBAAK,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,IAAI,CAACC,MAAhB;AAAwB,MAAA,IAAI,EAAED,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CAAR;AAIA,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGnB,KAAK,CAACO,QAAN,GAAiBc,gBAAjB,GACCL,KADD,gBACS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEAFZ,CADF;AAOD;;AA5CyC","sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport Note from './Main/Note'\r\nimport './Main.css';\r\nimport store from '../store';\r\nimport httpGetConnection from '../modules/httpConnection/httpGetConnection';\r\n\r\nexport default class Main extends Component {\r\n  mount = false;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = store.getState();\r\n\r\n    store.subscribe(() => {\r\n      if (this.mount) {\r\n        let _state = store.getState();\r\n        this.setState(_state);\r\n      }\r\n    });\r\n  }\r\n\r\n  // shouldComponentUpdate(nextProps, nextState) {\r\n  //   if (this.state === null) return false;\r\n  //   console.log('hi', this.state.categorySelected);\r\n    \r\n  //   return true;\r\n  // }\r\n\r\n\r\n async componentDidMount() {\r\n    this.mount = true;\r\n    console.log(\"zzzzzzzzzz\",this.state);\r\n  }\r\n\r\nasync componentDidUpdate() {\r\n  \r\n}\r\n\r\n  render() {\r\n    let notes = [];\r\n    notes = this.state.noteArr.map(\r\n      note => (<Note key={note.noteId} Note={note}></Note>)\r\n    );\r\n\r\n    return (\r\n      <div className=\"Main\">\r\n        {store.getState().categorySelected ?\r\n          notes : <p>카테고리 선택해라옹</p>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}