{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\test-study-redux\\\\src\\\\components\\\\Main.js\";\nimport React, { Component } from 'react';\nimport Note from './Main/Note';\nimport './Main.css';\nimport store from '../store';\nimport httpGetConnection from '../modules/httpConnection/httpGetConnection';\nexport default class Main extends Component {\n  constructor(props) {\n    super(props);\n    this.mount = false;\n    this.state = store.getState();\n    store.subscribe(() => {\n      if (this.mount) {\n        this.setState(store.getState());\n      }\n    });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.state === null) return false;\n\n    if (nextState.categorySelected === this.state.categorySelected) {\n      return false;\n    }\n\n    console.log(nextState.categorySelected);\n    return true;\n  }\n\n  componentDidMount() {\n    this.mount = true;\n    let _categoryCode = store.getState().categorySelected;\n\n    if (_categoryCode !== false) {\n      let url = \"http://110.11.49.218:8080/myapp/getCategoryItems\";\n      httpGetConnection(url, {\n        userEmail: 'vrimd1017@gmail.com',\n        categoryCode: _categoryCode\n      }, responseText => {\n        store.dispatch({\n          type: \"NOTES_LOAD\",\n          noteArr: JSON.parse(responseText)\n        });\n      }, () => {\n        alert(\"Connection Fail\");\n      });\n    }\n  }\n\n  render() {\n    let notes = [];\n    notes = this.state.noteArr.map(note => /*#__PURE__*/React.createElement(Note, {\n      key: note.noteId,\n      Note: note,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 18\n      }\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, store.getState().categorySelected ? notes : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 20\n      }\n    }, \"\\uCE74\\uD14C\\uACE0\\uB9AC \\uC120\\uD0DD\\uD574\\uB77C\\uC639\"));\n  }\n\n}","map":{"version":3,"sources":["D:/react/test-study-redux/src/components/Main.js"],"names":["React","Component","Note","store","httpGetConnection","Main","constructor","props","mount","state","getState","subscribe","setState","shouldComponentUpdate","nextProps","nextState","categorySelected","console","log","componentDidMount","_categoryCode","url","userEmail","categoryCode","responseText","dispatch","type","noteArr","JSON","parse","alert","render","notes","map","note","noteId"],"mappings":";AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAO,YAAP;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,iBAAP,MAA8B,6CAA9B;AAEA,eAAe,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AAE1CK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SADnBC,KACmB,GADX,KACW;AAEf,SAAKC,KAAL,GAAaN,KAAK,CAACO,QAAN,EAAb;AAEAP,IAAAA,KAAK,CAACQ,SAAN,CAAgB,MAAI;AAClB,UAAG,KAAKH,KAAR,EAAe;AACb,aAAKI,QAAL,CAAcT,KAAK,CAACO,QAAN,EAAd;AACD;AACH,KAJA;AAKD;;AAEDG,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AAC1C,QAAG,KAAKN,KAAL,KAAe,IAAlB,EAAwB,OAAO,KAAP;;AACxB,QAAGM,SAAS,CAACC,gBAAV,KAA+B,KAAKP,KAAL,CAAWO,gBAA7C,EAA+D;AAC7D,aAAO,KAAP;AACD;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAYH,SAAS,CAACC,gBAAtB;AACA,WAAO,IAAP;AACD;;AAEDG,EAAAA,iBAAiB,GAAG;AAClB,SAAKX,KAAL,GAAY,IAAZ;AACA,QAAIY,aAAa,GAAGjB,KAAK,CAACO,QAAN,GAAiBM,gBAArC;;AACA,QAAGI,aAAa,KAAK,KAArB,EAA4B;AAC1B,UAAIC,GAAG,GAAI,kDAAX;AACAjB,MAAAA,iBAAiB,CAACiB,GAAD,EAAM;AAACC,QAAAA,SAAS,EAAC,qBAAX;AAAkCC,QAAAA,YAAY,EAACH;AAA/C,OAAN,EACdI,YAAD,IAAgB;AACdrB,QAAAA,KAAK,CAACsB,QAAN,CAAe;AAACC,UAAAA,IAAI,EAAC,YAAN;AACfC,UAAAA,OAAO,EAAGC,IAAI,CAACC,KAAL,CAAWL,YAAX;AADK,SAAf;AAEC,OAJY,EAKb,MAAM;AAACM,QAAAA,KAAK,CAAC,iBAAD,CAAL;AAAyB,OALnB,CAAjB;AAOD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAIC,KAAK,GAAG,EAAZ;AACAA,IAAAA,KAAK,GAAG,KAAKvB,KAAL,CAAWkB,OAAX,CAAmBM,GAAnB,CACNC,IAAI,iBAAK,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,IAAI,CAACC,MAAhB;AAAwB,MAAA,IAAI,EAAED,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CAAR;AAIA,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI/B,KAAK,CAACO,QAAN,GAAiBM,gBAAjB,GACDgB,KADC,gBACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEAFX,CADF;AAOD;;AAlDuC","sourcesContent":["\r\nimport React, {Component} from 'react';\r\nimport Note from './Main/Note'\r\nimport './Main.css';\r\nimport store from '../store';\r\nimport httpGetConnection from '../modules/httpConnection/httpGetConnection';\r\n\r\nexport default class Main extends Component {\r\n  mount = false;  \r\n  constructor(props) {\r\n      super(props);\r\n      this.state = store.getState();\r\n\r\n      store.subscribe(()=>{\r\n        if(this.mount) {\r\n          this.setState(store.getState());\r\n        }\r\n     });\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n      if(this.state === null) return false;\r\n      if(nextState.categorySelected === this.state.categorySelected) {\r\n        return false;\r\n      }\r\n      console.log(nextState.categorySelected);\r\n      return true;\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.mount= true;\r\n      let _categoryCode = store.getState().categorySelected; \r\n      if(_categoryCode !== false) {\r\n        let url =  \"http://110.11.49.218:8080/myapp/getCategoryItems\";\r\n        httpGetConnection(url, {userEmail:'vrimd1017@gmail.com', categoryCode:_categoryCode}, \r\n          (responseText)=>{\r\n            store.dispatch({type:\"NOTES_LOAD\", \r\n            noteArr : JSON.parse(responseText)\r\n          })},\r\n            () => {alert(\"Connection Fail\")}\r\n          );\r\n      }\r\n    }\r\n\r\n    render() {\r\n      let notes = [];\r\n      notes = this.state.noteArr.map(\r\n        note => (<Note key={note.noteId} Note={note}></Note>)\r\n      );\r\n      \r\n      return(\r\n        <div className=\"Main\">\r\n           {store.getState().categorySelected ?\r\n           notes : <p>카테고리 선택해라옹</p> \r\n          }\r\n           </div>\r\n      )\r\n    }\r\n  }"]},"metadata":{},"sourceType":"module"}