{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\test-study-redux\\\\src\\\\components\\\\Main.js\";\nimport React, { Component } from 'react';\nimport Note from './Main/Note';\nimport './Main.css';\nimport store from '../store';\nexport default class Main extends Component {\n  constructor(props) {\n    super(props);\n    this.mount = false;\n    this.state = {\n      categorySelected: store.getState().categorySelected,\n      noteArr: []\n    };\n    store.subscribe(() => {\n      if (this.mount) {\n        this.setState(store.getState());\n      }\n    }).bind(this);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.state === null) return false;\n\n    if (nextState.categorySelected === this.state.categorySelected) {\n      return false;\n    }\n\n    return true;\n  }\n\n  componentDidMount() {\n    this.mount = true;\n  }\n\n  render() {\n    let notes = [];\n    notes = this.state.noteArr.map(note => /*#__PURE__*/React.createElement(Note, {\n      key: note.noteId,\n      Note: note,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 18\n      }\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, store.getState().categorySelected ? notes : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 20\n      }\n    }, \"\\uCE74\\uD14C\\uACE0\\uB9AC \\uC120\\uD0DD\\uD574\\uB77C\\uC639\"));\n  }\n\n}","map":{"version":3,"sources":["D:/react/test-study-redux/src/components/Main.js"],"names":["React","Component","Note","store","Main","constructor","props","mount","state","categorySelected","getState","noteArr","subscribe","setState","bind","shouldComponentUpdate","nextProps","nextState","componentDidMount","render","notes","map","note","noteId"],"mappings":";AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAO,YAAP;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,eAAe,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAE1CI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SADnBC,KACmB,GADX,KACW;AAEf,SAAKC,KAAL,GAAa;AACXC,MAAAA,gBAAgB,EAAGN,KAAK,CAACO,QAAN,GAAiBD,gBADzB;AAEXE,MAAAA,OAAO,EAAI;AAFA,KAAb;AAKAR,IAAAA,KAAK,CAACS,SAAN,CAAgB,MAAI;AAClB,UAAG,KAAKL,KAAR,EAAe;AACb,aAAKM,QAAL,CAAcV,KAAK,CAACO,QAAN,EAAd;AACD;AACF,KAJD,EAIGI,IAJH,CAIQ,IAJR;AAKD;;AAEDC,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AAC1C,QAAG,KAAKT,KAAL,KAAe,IAAlB,EAAwB,OAAO,KAAP;;AACxB,QAAGS,SAAS,CAACR,gBAAV,KAA+B,KAAKD,KAAL,CAAWC,gBAA7C,EAA+D;AAC7D,aAAO,KAAP;AACD;;AACD,WAAO,IAAP;AACD;;AAEDS,EAAAA,iBAAiB,GAAG;AAClB,SAAKX,KAAL,GAAY,IAAZ;AACD;;AAEDY,EAAAA,MAAM,GAAG;AACP,QAAIC,KAAK,GAAG,EAAZ;AACAA,IAAAA,KAAK,GAAG,KAAKZ,KAAL,CAAWG,OAAX,CAAmBU,GAAnB,CACNC,IAAI,iBAAK,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,IAAI,CAACC,MAAhB;AAAwB,MAAA,IAAI,EAAED,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CAAR;AAIA,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACInB,KAAK,CAACO,QAAN,GAAiBD,gBAAjB,GACDW,KADC,gBACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEAFX,CADF;AAOD;;AAzCuC","sourcesContent":["\r\nimport React, {Component} from 'react';\r\nimport Note from './Main/Note'\r\nimport './Main.css';\r\nimport store from '../store';\r\n\r\nexport default class Main extends Component {\r\n  mount = false;  \r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        categorySelected : store.getState().categorySelected,\r\n        noteArr  : []\r\n      }\r\n\r\n      store.subscribe(()=>{\r\n        if(this.mount) {\r\n          this.setState(store.getState());\r\n        }\r\n      }).bind(this);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n      if(this.state === null) return false;\r\n      if(nextState.categorySelected === this.state.categorySelected) {\r\n        return false;\r\n      }\r\n      return true;\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.mount= true;\r\n    }\r\n\r\n    render() {\r\n      let notes = [];\r\n      notes = this.state.noteArr.map(\r\n        note => (<Note key={note.noteId} Note={note}></Note>)\r\n      );\r\n      \r\n      return(\r\n        <div className=\"Main\">\r\n           {store.getState().categorySelected ?\r\n           notes : <p>카테고리 선택해라옹</p> \r\n          }\r\n           </div>\r\n      )\r\n    }\r\n  }"]},"metadata":{},"sourceType":"module"}