{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\react\\\\test-study-redux\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"D:\\\\react\\\\test-study-redux\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";var httpJsonConnection=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(url,body,resSuc,resFail){var sendData,json;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log('cccc',url);sendData=JSON.stringify(body);_context.next=4;return fetch(url,{method:'POST',body:sendData,headers:{'Content-Type':'application/json','Authorization':'Bearer'}}).then(function(res){return res.json();}).catch(function(err){return console.log(\"\".concat(err));});case 4:json=_context.sent;return _context.abrupt(\"return\",json);case 6:case\"end\":return _context.stop();}}},_callee);}));return function httpJsonConnection(_x,_x2,_x3,_x4){return _ref.apply(this,arguments);};}();export default httpJsonConnection;","map":{"version":3,"sources":["D:/react/test-study-redux/src/modules/httpConnection/httpJsonConnection.js"],"names":["httpJsonConnection","url","body","resSuc","resFail","console","log","sendData","JSON","stringify","fetch","method","headers","then","res","json","catch","err"],"mappings":"2SAAA,GAAMA,CAAAA,kBAAkB,0FAAG,iBAAOC,GAAP,CAAYC,IAAZ,CAAkBC,MAAlB,CAA0BC,OAA1B,oIACvBC,OAAO,CAACC,GAAR,CAAY,MAAZ,CAAmBL,GAAnB,EAEIM,QAHmB,CAGRC,IAAI,CAACC,SAAL,CAAeP,IAAf,CAHQ,uBAINQ,CAAAA,KAAK,CAACT,GAAD,CAAM,CAC1BU,MAAM,CAAE,MADkB,CAE1BT,IAAI,CAAEK,QAFoB,CAG1BK,OAAO,CAAC,CACN,eAAgB,kBADV,CAEN,gBAAkB,QAFZ,CAHkB,CAAN,CAAL,CAQdC,IARc,CAQT,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,EAAJ,EARM,EASdC,KATc,CASR,SAAAC,GAAG,QAAGZ,CAAAA,OAAO,CAACC,GAAR,WAAeW,GAAf,EAAH,EATK,CAJM,QAInBF,IAJmB,+CAejBA,IAfiB,wDAAH,kBAAlBf,CAAAA,kBAAkB,wDAAxB,CAkBE,cAAeA,CAAAA,kBAAf","sourcesContent":["const httpJsonConnection = async (url, body, resSuc, resFail) => {\r\n    console.log('cccc',url);    \r\n    \r\n    let sendData = JSON.stringify(body);\r\n    let json = await fetch(url, {\r\n      method: 'POST',\r\n      body: sendData,\r\n      headers:{\r\n        'Content-Type': 'application/json',\r\n        'Authorization' : 'Bearer',\r\n      }\r\n    })\r\n      .then(res => res.json())\r\n      .catch(err =>console.log(`${err}`));\r\n\r\n   return json;\r\n  };\r\n  \r\n  export default httpJsonConnection;"]},"metadata":{},"sourceType":"module"}