{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\test-study-redux\\\\src\\\\components\\\\Main.js\";\nimport React, { Component } from 'react';\nimport Note from './Main/Note';\nimport './Main.css';\nimport store from '../store';\nimport httpGetConnection from '../modules/httpConnection/httpGetConnection';\nexport default class Main extends Component {\n  constructor(props) {\n    super(props);\n    this.mount = false;\n    this.state = store.getState();\n    store.subscribe(() => {\n      if (this.mount) {\n        console.log(store.getState());\n        this.setState(store.getState());\n      }\n    });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.state === null) return false;\n\n    if (nextState.categorySelected === this.state.categorySelected) {\n      return false;\n    }\n\n    console.log('hi', this.state.categorySelected);\n    return true;\n  }\n\n  async componentDidMount() {\n    this.mount = true;\n    console.log('hi hy', this.state.categorySelected);\n  }\n\n  async componentDidUpdate() {\n    let _categoryCode = this.state.categorySelected;\n    console.log(\"zzzzzzzzzz\", this.state);\n\n    if (_categoryCode !== false) {\n      let url = \"http://110.11.49.218:8080/myapp/getCategoryItems\";\n      let json = await httpGetConnection(url, {\n        userEmail: 'vrimd1017@gmail.com',\n        categoryCode: _categoryCode\n      }, responseJson => {\n        store.dispatch({\n          type: \"NOTES_LOADED\",\n          noteArr: responseJson\n        });\n      }, () => {\n        alert(\"Connection Fail\");\n      });\n      setTimeout(store.dispatch({\n        type: \"NOTES_LOADED\",\n        noteArr: json\n      }), 10);\n    }\n  }\n\n  render() {\n    let notes = [];\n    notes = this.state.noteArr.map(note => /*#__PURE__*/React.createElement(Note, {\n      key: note.noteId,\n      Note: note,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 16\n      }\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, store.getState().categorySelected ? notes : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }\n    }, \"\\uCE74\\uD14C\\uACE0\\uB9AC \\uC120\\uD0DD\\uD574\\uB77C\\uC639\"));\n  }\n\n}","map":{"version":3,"sources":["D:/react/test-study-redux/src/components/Main.js"],"names":["React","Component","Note","store","httpGetConnection","Main","constructor","props","mount","state","getState","subscribe","console","log","setState","shouldComponentUpdate","nextProps","nextState","categorySelected","componentDidMount","componentDidUpdate","_categoryCode","url","json","userEmail","categoryCode","responseJson","dispatch","type","noteArr","alert","setTimeout","render","notes","map","note","noteId"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAO,YAAP;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,iBAAP,MAA8B,6CAA9B;AAEA,eAAe,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AAE1CK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SADnBC,KACmB,GADX,KACW;AAEjB,SAAKC,KAAL,GAAaN,KAAK,CAACO,QAAN,EAAb;AAEAP,IAAAA,KAAK,CAACQ,SAAN,CAAgB,MAAM;AACpB,UAAI,KAAKH,KAAT,EAAgB;AACdI,QAAAA,OAAO,CAACC,GAAR,CAAYV,KAAK,CAACO,QAAN,EAAZ;AACA,aAAKI,QAAL,CAAcX,KAAK,CAACO,QAAN,EAAd;AACD;AACF,KALD;AAMD;;AAEDK,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AAC1C,QAAI,KAAKR,KAAL,KAAe,IAAnB,EAAyB,OAAO,KAAP;;AACzB,QAAIQ,SAAS,CAACC,gBAAV,KAA+B,KAAKT,KAAL,CAAWS,gBAA9C,EAAgE;AAC9D,aAAO,KAAP;AACD;;AACDN,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkB,KAAKJ,KAAL,CAAWS,gBAA7B;AAEA,WAAO,IAAP;AACD;;AAGF,QAAMC,iBAAN,GAA0B;AACvB,SAAKX,KAAL,GAAa,IAAb;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,KAAKJ,KAAL,CAAWS,gBAAhC;AACD;;AAED,QAAME,kBAAN,GAA2B;AACzB,QAAIC,aAAa,GAAG,KAAKZ,KAAL,CAAWS,gBAA/B;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyB,KAAKJ,KAA9B;;AACA,QAAIY,aAAa,KAAK,KAAtB,EAA6B;AAC3B,UAAIC,GAAG,GAAG,kDAAV;AACA,UAAIC,IAAI,GAAG,MAAMnB,iBAAiB,CAACkB,GAAD,EAAM;AAAEE,QAAAA,SAAS,EAAE,qBAAb;AAAoCC,QAAAA,YAAY,EAAEJ;AAAlD,OAAN,EAC/BK,YAAD,IAAkB;AAChBvB,QAAAA,KAAK,CAACwB,QAAN,CAAe;AACbC,UAAAA,IAAI,EAAE,cADO;AAEbC,UAAAA,OAAO,EAAEH;AAFI,SAAf;AAID,OAN+B,EAOhC,MAAM;AAAEI,QAAAA,KAAK,CAAC,iBAAD,CAAL;AAA0B,OAPF,CAAlC;AASDC,MAAAA,UAAU,CAAC5B,KAAK,CAACwB,QAAN,CAAe;AACvBC,QAAAA,IAAI,EAAE,cADiB;AAEvBC,QAAAA,OAAO,EAAEN;AAFc,OAAf,CAAD,EAGL,EAHK,CAAV;AAIA;AACF;;AAEDS,EAAAA,MAAM,GAAG;AACP,QAAIC,KAAK,GAAG,EAAZ;AACAA,IAAAA,KAAK,GAAG,KAAKxB,KAAL,CAAWoB,OAAX,CAAmBK,GAAnB,CACNC,IAAI,iBAAK,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,IAAI,CAACC,MAAhB;AAAwB,MAAA,IAAI,EAAED,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CAAR;AAIA,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGhC,KAAK,CAACO,QAAN,GAAiBQ,gBAAjB,GACCe,KADD,gBACS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEAFZ,CADF;AAOD;;AAhEyC","sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport Note from './Main/Note'\r\nimport './Main.css';\r\nimport store from '../store';\r\nimport httpGetConnection from '../modules/httpConnection/httpGetConnection';\r\n\r\nexport default class Main extends Component {\r\n  mount = false;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = store.getState();\r\n\r\n    store.subscribe(() => {\r\n      if (this.mount) {\r\n        console.log(store.getState());\r\n        this.setState(store.getState());\r\n      }\r\n    });\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (this.state === null) return false;\r\n    if (nextState.categorySelected === this.state.categorySelected) {\r\n      return false;\r\n    }\r\n    console.log('hi', this.state.categorySelected);\r\n    \r\n    return true;\r\n  }\r\n\r\n\r\n async componentDidMount() {\r\n    this.mount = true;\r\n    console.log('hi hy', this.state.categorySelected);\r\n  }\r\n\r\n  async componentDidUpdate() {\r\n    let _categoryCode = this.state.categorySelected;\r\n    console.log(\"zzzzzzzzzz\",this.state);\r\n    if (_categoryCode !== false) {\r\n      let url = \"http://110.11.49.218:8080/myapp/getCategoryItems\";\r\n      let json = await httpGetConnection(url, { userEmail: 'vrimd1017@gmail.com', categoryCode: _categoryCode },\r\n        (responseJson) => {\r\n          store.dispatch({\r\n            type: \"NOTES_LOADED\",\r\n            noteArr: responseJson\r\n          })\r\n        },\r\n        () => { alert(\"Connection Fail\") }\r\n      )\r\n     setTimeout(store.dispatch({\r\n        type: \"NOTES_LOADED\",\r\n        noteArr: json\r\n      }), 10);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let notes = [];\r\n    notes = this.state.noteArr.map(\r\n      note => (<Note key={note.noteId} Note={note}></Note>)\r\n    );\r\n\r\n    return (\r\n      <div className=\"Main\">\r\n        {store.getState().categorySelected ?\r\n          notes : <p>카테고리 선택해라옹</p>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}