{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\test-study-redux\\\\src\\\\components\\\\Main\\\\Note\\\\YTC.js\";\nimport React, { Component } from 'react';\nexport default class YTC extends Component {\n  constructor(props) {\n    super(props);\n    this.init();\n    this.video = '1cH2cerUpMQ'; //video id\n\n    window['onYouTubeIframeAPIReady'] = e => {\n      this.YT = window['YT'];\n      this.reframed = false;\n      this.player = new window['YT'].Player('player', {\n        videoId: this.video,\n        events: {\n          'onStateChange': this.onPlayerStateChange.bind(this),\n          'onError': this.onPlayerError.bind(this),\n          'onReady': e => {\n            if (!this.reframed) {\n              this.reframed = true;\n              this.setState();\n            }\n          }\n        }\n      });\n    };\n  }\n\n  render() {\n    const style = `.max-width-1024 { max-width: 1024px; margin: 0 auto; }`;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"style\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, style), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"max-width-1024\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"embed-responsive embed-responsive-16by9\",\n      id: \"player\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  init() {\n    var tag = document.createElement('script');\n    tag.src = 'https://www.youtube.com/iframe_api';\n    var firstScriptTag = document.getElementsByTagName('script')[0];\n    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n  }\n\n  onPlayerStateChange(event) {\n    console.log(event);\n\n    switch (event.data) {\n      case window['YT'].PlayerState.PLAYING:\n        if (this.cleanTime() == 0) {\n          console.log('started ' + this.cleanTime());\n        } else {\n          console.log('playing ' + this.cleanTime());\n        }\n\n        ;\n        break;\n\n      case window['YT'].PlayerState.PAUSED:\n        if (this.player.getDuration() - this.player.getCurrentTime() != 0) {\n          console.log('paused' + ' @ ' + this.cleanTime());\n        }\n\n        ;\n        break;\n\n      case window['YT'].PlayerState.ENDED:\n        console.log('ended ');\n        break;\n\n      default:\n        break;\n    }\n\n    ;\n  }\n\n  //utility\n  cleanTime() {\n    return Math.round(this.player.getCurrentTime());\n  }\n\n  onPlayerError(event) {\n    switch (event.data) {\n      case 2:\n        console.log('' + this.video);\n        break;\n\n      case 100:\n        break;\n\n      case 101 || 150:\n        break;\n\n      default:\n        break;\n    }\n\n    ;\n  }\n\n}","map":{"version":3,"sources":["D:/react/test-study-redux/src/components/Main/Note/YTC.js"],"names":["React","Component","YTC","constructor","props","init","video","window","e","YT","reframed","player","Player","videoId","events","onPlayerStateChange","bind","onPlayerError","setState","render","style","tag","document","createElement","src","firstScriptTag","getElementsByTagName","parentNode","insertBefore","event","console","log","data","PlayerState","PLAYING","cleanTime","PAUSED","getDuration","getCurrentTime","ENDED","Math","round"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\n\r\nexport default class YTC extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.init();\r\n        this.video = '1cH2cerUpMQ' //video id\r\n    \r\n        window['onYouTubeIframeAPIReady'] = (e) => {\r\n          this.YT = window['YT'];\r\n          this.reframed = false;\r\n          this.player = new window['YT'].Player('player', {\r\n            videoId: this.video,\r\n            events: {\r\n              'onStateChange': this.onPlayerStateChange.bind(this),\r\n              'onError': this.onPlayerError.bind(this),\r\n              'onReady': (e) => {\r\n                if (!this.reframed) {\r\n                  this.reframed = true;\r\n                  this.setState();\r\n                }\r\n              }\r\n            }\r\n          });\r\n        };\r\n      }\r\n      render() {\r\n        const style = `.max-width-1024 { max-width: 1024px; margin: 0 auto; }`;\r\n        return (<div>\r\n            <style>{style}</style>\r\n          <div className=\"max-width-1024\">\r\n          <div className=\"embed-responsive embed-responsive-16by9\" id=\"player\">\r\n          </div>\r\n        </div>\r\n          </div>\r\n        );\r\n      }\r\n      init() {\r\n        var tag = document.createElement('script');\r\n        tag.src = 'https://www.youtube.com/iframe_api';\r\n        var firstScriptTag = document.getElementsByTagName('script')[0];\r\n        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n      }\r\n    \r\n      onPlayerStateChange(event) {\r\n        console.log(event)\r\n        switch (event.data) {\r\n          case window['YT'].PlayerState.PLAYING:\r\n            if (this.cleanTime() == 0) {\r\n              console.log('started ' + this.cleanTime());\r\n            } else {\r\n              console.log('playing ' + this.cleanTime())\r\n            };\r\n            break;\r\n          case window['YT'].PlayerState.PAUSED:\r\n            if (this.player.getDuration() - this.player.getCurrentTime() != 0) {\r\n              console.log('paused' + ' @ ' + this.cleanTime());\r\n            };\r\n            break;\r\n          case window['YT'].PlayerState.ENDED:\r\n            console.log('ended ');\r\n            break;\r\n          default:\r\n            break;\r\n        };\r\n      };\r\n      //utility\r\n      cleanTime() {\r\n        return Math.round(this.player.getCurrentTime())\r\n      };\r\n      onPlayerError(event) {\r\n        switch (event.data) {\r\n          case 2:\r\n            console.log('' + this.video)\r\n            break;\r\n          case 100:\r\n            break;\r\n          case 101 || 150:\r\n            break;\r\n          default:\r\n              break;\r\n        };\r\n      };\r\n    }\r\n    "]},"metadata":{},"sourceType":"module"}