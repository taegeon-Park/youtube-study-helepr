{"ast":null,"code":"const httpGetConnection = (url, parameters, resSuc, resFail) => {\n  let plusParamsUrl = url; // plus parameters\n\n  if (parameters !== null) {\n    let keys = Object.keys(parameters);\n    keys.forEach(key => {\n      plusParamsUrl += `${key}=${parameters.key}&`;\n    });\n  }\n\n  console.log(plusParamsUrl); // creation request\n\n  let req = new XMLHttpRequest(); // request open, with async option is true\n\n  req.open('GET', plusParamsUrl, true); // set request-header authorization for cors\n\n  req.setRequestHeader(\"Authorization\", \"Bearer\");\n\n  req.onreadystatechange = e => {\n    if (req.readyState === 4) {\n      resSuc(req.responseText);\n    } else {\n      resFail();\n    }\n  };\n\n  return req;\n};\n\nexport default httpGetConnection;","map":{"version":3,"sources":["D:/react/test-study-redux/src/modules/httpConnection/httpGetConnection.js"],"names":["httpGetConnection","url","parameters","resSuc","resFail","plusParamsUrl","keys","Object","forEach","key","console","log","req","XMLHttpRequest","open","setRequestHeader","onreadystatechange","e","readyState","responseText"],"mappings":"AAAA,MAAMA,iBAAiB,GAAG,CAACC,GAAD,EAAMC,UAAN,EAAkBC,MAAlB,EAA0BC,OAA1B,KAAsC;AAC9D,MAAIC,aAAa,GAAGJ,GAApB,CAD8D,CAE9D;;AACA,MAAIC,UAAU,KAAK,IAAnB,EAAyB;AACvB,QAAII,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYJ,UAAZ,CAAX;AACAI,IAAAA,IAAI,CAACE,OAAL,CAAaC,GAAG,IAAI;AAClBJ,MAAAA,aAAa,IAAK,GAAEI,GAAI,IAAGP,UAAU,CAACO,GAAI,GAA1C;AACD,KAFD;AAGD;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAYN,aAAZ,EAT8D,CAU9D;;AACA,MAAIO,GAAG,GAAG,IAAIC,cAAJ,EAAV,CAX8D,CAY9D;;AACAD,EAAAA,GAAG,CAACE,IAAJ,CAAS,KAAT,EAAgBT,aAAhB,EAA+B,IAA/B,EAb8D,CAc9D;;AACAO,EAAAA,GAAG,CAACG,gBAAJ,CAAqB,eAArB,EAAsC,QAAtC;;AACAH,EAAAA,GAAG,CAACI,kBAAJ,GAA0BC,CAAD,IAAO;AAC9B,QAAIL,GAAG,CAACM,UAAJ,KAAmB,CAAvB,EAA0B;AACxBf,MAAAA,MAAM,CAACS,GAAG,CAACO,YAAL,CAAN;AACD,KAFD,MAEO;AACLf,MAAAA,OAAO;AACR;AACF,GAND;;AAQA,SAAOQ,GAAP;AACD,CAzBD;;AA2BA,eAAeZ,iBAAf","sourcesContent":["const httpGetConnection = (url, parameters, resSuc, resFail) => {\r\n  let plusParamsUrl = url;\r\n  // plus parameters\r\n  if (parameters !== null) {\r\n    let keys = Object.keys(parameters);\r\n    keys.forEach(key => {\r\n      plusParamsUrl += `${key}=${parameters.key}&`\r\n    });\r\n  }\r\n  console.log(plusParamsUrl);\r\n  // creation request\r\n  let req = new XMLHttpRequest();\r\n  // request open, with async option is true\r\n  req.open('GET', plusParamsUrl, true);\r\n  // set request-header authorization for cors\r\n  req.setRequestHeader(\"Authorization\", \"Bearer\");\r\n  req.onreadystatechange = (e) => {\r\n    if (req.readyState === 4) {\r\n      resSuc(req.responseText);\r\n    } else {\r\n      resFail();\r\n    }\r\n  }\r\n\r\n  return req;\r\n};\r\n\r\nexport default httpGetConnection;"]},"metadata":{},"sourceType":"module"}