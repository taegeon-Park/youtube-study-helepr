{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\test-study-redux\\\\src\\\\components\\\\Nav.js\";\nimport React, { Component } from 'react';\nimport store from '../store';\nimport Category from './Nav/Category';\nimport './Nav.css';\nimport httpGetConnection from '../modules/httpConnection/httpGetConnection';\nexport default class Nav extends Component {\n  constructor(props) {\n    super(props);\n    this.mount = false;\n    this.state = store.getState();\n    store.subscribe(() => {\n      if (this.mount) {\n        this.setState(store.getState());\n      }\n    });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.state === nextState) {\n      console.log(this.state);\n      console.log(nextState);\n      return false;\n    }\n\n    console.log(this.state);\n    console.log(nextState);\n    return true;\n  }\n\n  componentDidMount() {\n    this.mount = true; //let url =\"http://localhost:9000\";\n\n    let url = \"http://110.11.49.218:8080/myapp/getusercategorylist\";\n    httpGetConnection(url, {\n      userEmail: 'vrimd1017@gmail.com'\n    }, responseText => {\n      store.dispatch({\n        type: \"CATEGORYS_LOAD\",\n        categoryArr: JSON.parse(responseText)\n      });\n    }, () => {\n      alert(\"Connection Fail\");\n    });\n  }\n\n  render() {\n    let _onExtendNavMod = this.state.onExtendNavMod;\n    let _categoryArr = this.state.categoryArr;\n    let _categoryList = [];\n\n    if (_categoryArr !== undefined) {\n      _categoryArr.forEach(element => {\n        _categoryList.push( /*#__PURE__*/React.createElement(Category, {\n          key: element.id,\n          category: element,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 32\n          }\n        }));\n      });\n    }\n\n    let onClickNavCategoryTab = e => {\n      store.dispatch({\n        type: 'EXTEND_NAV',\n        onExtendNavMod: !_onExtendNavMod\n      });\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Nav-home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, \"\\u25B6\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Nav-category-tab\",\n      onClick: onClickNavCategoryTab,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, \"category\"), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"Nav-category-items\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, _categoryList), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"Nav-category-foot\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, \"foot\"));\n  }\n\n}","map":{"version":3,"sources":["D:/react/test-study-redux/src/components/Nav.js"],"names":["React","Component","store","Category","httpGetConnection","Nav","constructor","props","mount","state","getState","subscribe","setState","shouldComponentUpdate","nextProps","nextState","console","log","componentDidMount","url","userEmail","responseText","dispatch","type","categoryArr","JSON","parse","alert","render","_onExtendNavMod","onExtendNavMod","_categoryArr","_categoryList","undefined","forEach","element","push","id","onClickNavCategoryTab","e"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport store from '../store';\r\nimport Category from './Nav/Category';\r\nimport './Nav.css';\r\nimport httpGetConnection from '../modules/httpConnection/httpGetConnection';\r\n\r\nexport default class Nav extends Component {\r\n  mount = false;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = store.getState();\r\n\r\n    store.subscribe(()=>{\r\n        if(this.mount) {\r\n          this.setState(store.getState());\r\n        }\r\n    });\r\n  }\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n      if(this.state === nextState) {\r\n        console.log(this.state);\r\n        console.log(nextState);\r\n        return false;\r\n      }\r\n      console.log(this.state);\r\n      console.log(nextState);\r\n      return true;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.mount = true;\r\n    //let url =\"http://localhost:9000\";\r\n    let url =  \"http://110.11.49.218:8080/myapp/getusercategorylist\";\r\n    httpGetConnection(url, {userEmail:'vrimd1017@gmail.com'}, \r\n      (responseText)=>{\r\n        store.dispatch({type:\"CATEGORYS_LOAD\", \r\n        categoryArr : JSON.parse(responseText)\r\n      })},\r\n        () => {alert(\"Connection Fail\")}\r\n      );\r\n  }\r\n  \r\n    render() {\r\n      let _onExtendNavMod =this.state.onExtendNavMod;\r\n      let _categoryArr = this.state.categoryArr;\r\n      let _categoryList = [];\r\n\r\n      if(_categoryArr !== undefined) {\r\n         _categoryArr.forEach(element => {\r\n            _categoryList.push(<Category key={element.id} category={element}/>);\r\n         });\r\n      }\r\n      let onClickNavCategoryTab = e => {\r\n          store.dispatch({type:'EXTEND_NAV', onExtendNavMod:  !_onExtendNavMod});\r\n      }\r\n\r\n      return(\r\n        <div className=\"Nav\">\r\n          <div className=\"Nav-home\">â–¶</div>\r\n          <div className=\"Nav-category-tab\" onClick={onClickNavCategoryTab}>category</div>\r\n          <ul className=\"Nav-category-items\">\r\n              {_categoryList}\r\n          </ul>\r\n          <p className=\"Nav-category-foot\">foot</p>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  "]},"metadata":{},"sourceType":"module"}