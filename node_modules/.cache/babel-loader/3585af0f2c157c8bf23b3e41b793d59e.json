{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\test-study-redux\\\\src\\\\components\\\\Main.js\";\nimport React, { Component } from 'react';\nimport Note from './Main/Note';\nimport './Main.css';\nimport store from '../store';\nimport httpGetConnection from '../modules/httpConnection/httpGetConnection';\nexport default class Main extends Component {\n  constructor(props) {\n    super(props);\n    this.mount = false;\n    store.subscribe(() => {\n      if (this.mount) {\n        let _state = store.getState();\n\n        console.log(_state);\n        this.setState(_state);\n      }\n    });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log(this.props.noteArr);\n    if (this.props.noteArr === nextProps.noteArr) return false;\n    return true;\n  }\n\n  async componentDidMount() {\n    this.mount = true;\n    let _categoryCode = store.getState().categorySelected;\n\n    if (_categoryCode !== false) {\n      //let url = \"http://110.11.49.218:8080/myapp/getCategoryItems\";\n      //{ userEmail: 'vrimd1017@gmail.com', categoryCode: _categoryCode }\n      let url = \"http://localhost:9000/test2\";\n      httpGetConnection(url, null, responseJson => {\n        store.dispatch({\n          type: \"NOTES_LOADED\",\n          noteArr: responseJson\n        });\n      }, () => {\n        alert(\"Connection Fail\");\n      });\n    }\n  }\n\n  render() {\n    let notes = [];\n    notes = this.state.noteArr.map(note => /*#__PURE__*/React.createElement(Note, {\n      key: note.noteId,\n      Note: note,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 16\n      }\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, store.getState().categorySelected ? notes : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }\n    }, \"\\uCE74\\uD14C\\uACE0\\uB9AC \\uC120\\uD0DD\\uD574\\uB77C\\uC639\"));\n  }\n\n}","map":{"version":3,"sources":["D:/react/test-study-redux/src/components/Main.js"],"names":["React","Component","Note","store","httpGetConnection","Main","constructor","props","mount","subscribe","_state","getState","console","log","setState","shouldComponentUpdate","nextProps","nextState","noteArr","componentDidMount","_categoryCode","categorySelected","url","responseJson","dispatch","type","alert","render","notes","state","map","note","noteId"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAO,YAAP;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,iBAAP,MAA8B,6CAA9B;AAEA,eAAe,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AAE1CK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SADnBC,KACmB,GADX,KACW;AAIjBL,IAAAA,KAAK,CAACM,SAAN,CAAgB,MAAM;AACpB,UAAI,KAAKD,KAAT,EAAgB;AACd,YAAIE,MAAM,GAAGP,KAAK,CAACQ,QAAN,EAAb;;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,aAAKI,QAAL,CAAcJ,MAAd;AACD;AACF,KAND;AAOD;;AAEDK,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AAC1CL,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWW,OAAvB;AACA,QAAI,KAAKX,KAAL,CAAWW,OAAX,KAAuBF,SAAS,CAACE,OAArC,EAA8C,OAAO,KAAP;AAE9C,WAAO,IAAP;AACD;;AAGF,QAAMC,iBAAN,GAA0B;AACvB,SAAKX,KAAL,GAAa,IAAb;AAEA,QAAIY,aAAa,GAAGjB,KAAK,CAACQ,QAAN,GAAiBU,gBAArC;;AAEA,QAAID,aAAa,KAAK,KAAtB,EAA6B;AAC3B;AACA;AACA,UAAIE,GAAG,GAAG,6BAAV;AACAlB,MAAAA,iBAAiB,CAACkB,GAAD,EAAM,IAAN,EACdC,YAAD,IAAkB;AAChBpB,QAAAA,KAAK,CAACqB,QAAN,CAAe;AACbC,UAAAA,IAAI,EAAE,cADO;AAEbP,UAAAA,OAAO,EAAEK;AAFI,SAAf;AAID,OANc,EAOf,MAAM;AAAEG,QAAAA,KAAK,CAAC,iBAAD,CAAL;AAA0B,OAPnB,CAAjB;AASD;AAEF;;AAEDC,EAAAA,MAAM,GAAG;AAEP,QAAIC,KAAK,GAAG,EAAZ;AACAA,IAAAA,KAAK,GAAG,KAAKC,KAAL,CAAWX,OAAX,CAAmBY,GAAnB,CACNC,IAAI,iBAAK,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,IAAI,CAACC,MAAhB;AAAwB,MAAA,IAAI,EAAED,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CAAR;AAIA,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG5B,KAAK,CAACQ,QAAN,GAAiBU,gBAAjB,GACCO,KADD,gBACS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEAFZ,CADF;AAOD;;AA3DyC","sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport Note from './Main/Note'\r\nimport './Main.css';\r\nimport store from '../store';\r\nimport httpGetConnection from '../modules/httpConnection/httpGetConnection';\r\n\r\nexport default class Main extends Component {\r\n  mount = false;\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n\r\n    store.subscribe(() => {\r\n      if (this.mount) {\r\n        let _state = store.getState();\r\n        console.log(_state);\r\n        this.setState(_state);\r\n      }\r\n    });\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    console.log(this.props.noteArr);\r\n    if (this.props.noteArr === nextProps.noteArr) return false;\r\n    \r\n    return true;\r\n  }\r\n\r\n\r\n async componentDidMount() {\r\n    this.mount = true;\r\n\r\n    let _categoryCode = store.getState().categorySelected;\r\n\r\n    if (_categoryCode !== false) {\r\n      //let url = \"http://110.11.49.218:8080/myapp/getCategoryItems\";\r\n      //{ userEmail: 'vrimd1017@gmail.com', categoryCode: _categoryCode }\r\n      let url = \"http://localhost:9000/test2\";\r\n      httpGetConnection(url, null,\r\n        (responseJson) => {\r\n          store.dispatch({\r\n            type: \"NOTES_LOADED\",\r\n            noteArr: responseJson\r\n          })\r\n        },\r\n        () => { alert(\"Connection Fail\") }\r\n      )\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    let notes = [];\r\n    notes = this.state.noteArr.map(\r\n      note => (<Note key={note.noteId} Note={note}></Note>)\r\n    );\r\n\r\n    return (\r\n      <div className=\"Main\">\r\n        {store.getState().categorySelected ?\r\n          notes : <p>카테고리 선택해라옹</p>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}