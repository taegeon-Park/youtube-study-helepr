{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\test-study-redux\\\\src\\\\components\\\\Main\\\\Note\\\\NoteDetail.js\";\nimport React, { Component } from 'react';\nimport Memo from './Memo';\nimport Youtube from 'react-youtube';\nimport './NoteDetail.css';\nexport default class NoteDetail extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      memoList: []\n    };\n  }\n\n  componentWillMount() {}\n\n  render() {\n    let memoIndex = -1;\n    let onStateChangeId = null;\n    let memosWithIndex = this.state.memoList.map(memo => Object.assign(memo, {\n      index: ++memoIndex\n    }));\n\n    let _onReady = e => {\n      this.setState({\n        youtubePlayer: e.target\n      });\n      e.target.playVideo();\n      const memoList = document.getElementById(\"memoList\");\n      memoList.value = e.target;\n      onStateChangeId = true;\n      setTimeout(_onTimeChange(e.target), 100);\n    };\n\n    let onClickMemoAdd = e => {\n      if (this.state.youtubePlayer !== null) alert(this.state.youtubePlayer.getCurrentTime());\n    };\n\n    let _onChangeTitle = e => {\n      this.setState({\n        title: e.target.value\n      });\n    };\n\n    let _onChageContent = e => {\n      this.setState({\n        content: e.target.value\n      });\n    };\n\n    let _onChangeVideoTime = index => {\n      this.setState({\n        title: memosWithIndex[index].memoTitle,\n        content: memosWithIndex[index].memoContent\n      });\n      memoIndex = index;\n    };\n\n    let _onStateChange = e => {\n      onStateChangeId = false;\n      let cState = e.target.getPlayerState();\n\n      switch (cState) {\n        case -1:\n          // 시작되지 않음\n          break;\n\n        case 0:\n          // 종료\n          break;\n\n        case 1:\n          onStateChangeId = true;\n          setTimeout(_onTimeChange(e.target), 100); // 재생중\n\n          break;\n\n        case 2:\n          // 일시중지\n          break;\n\n        case 3:\n          // 버퍼링\n          break;\n\n        case 5:\n          // 버퍼링\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    let _onTimeChange = youtubeVideoPlayer => {\n      let clearTime = setInterval(() => {\n        if (!onStateChangeId) clearTimeout(clearTime);\n        let cTime = Number.parseInt(youtubeVideoPlayer.getCurrentTime());\n        let cMemo = memosWithIndex.map(memo => memo).filter(memo => memo.memoVideoTime === cTime);\n\n        if (cMemo.length > 0) {\n          this.setState({\n            title: cMemo[0].memoTitle,\n            content: cMemo[0].memoContent\n          });\n        }\n      }, 500);\n    };\n\n    let memoArray = memosWithIndex.map(memo => /*#__PURE__*/React.createElement(Memo, {\n      onStateChange: _onChangeVideoTime,\n      key: memo.memoId,\n      memo: memo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 52\n      }\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"NoteDetail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"YoutubeVideo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Youtube, {\n      className: \"YoutubeVideoI\",\n      videoId: this.props.note.noteURL,\n      onReady: _onReady,\n      onStateChange: _onStateChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"current-memo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"current-memo-title common\",\n      onChange: _onChangeTitle,\n      value: this.props.note.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"current-memo-content common\",\n      onChange: _onChageContent,\n      value: this.props.note.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"memo-add-button\",\n      onClick: onClickMemoAdd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }\n    }, \"ADD\"))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"memoList\",\n      className: \"MemoList\",\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }, memoArray));\n  }\n\n}","map":{"version":3,"sources":["D:/react/test-study-redux/src/components/Main/Note/NoteDetail.js"],"names":["React","Component","Memo","Youtube","NoteDetail","state","memoList","componentWillMount","render","memoIndex","onStateChangeId","memosWithIndex","map","memo","Object","assign","index","_onReady","e","setState","youtubePlayer","target","playVideo","document","getElementById","value","setTimeout","_onTimeChange","onClickMemoAdd","alert","getCurrentTime","_onChangeTitle","title","_onChageContent","content","_onChangeVideoTime","memoTitle","memoContent","_onStateChange","cState","getPlayerState","youtubeVideoPlayer","clearTime","setInterval","clearTimeout","cTime","Number","parseInt","cMemo","filter","memoVideoTime","length","memoArray","memoId","props","note","noteURL"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Memo from './Memo';\r\nimport Youtube from 'react-youtube';\r\nimport './NoteDetail.css';\r\n\r\n\r\n\r\nexport default class NoteDetail extends Component {\r\n    state = {\r\n        memoList: []\r\n    }\r\n\r\n    componentWillMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        let memoIndex = -1;\r\n        let onStateChangeId = null;\r\n\r\n        let memosWithIndex = this.state.memoList.map(memo => Object.assign(memo, { index: ++memoIndex }))\r\n        let _onReady = (e) => {\r\n            this.setState({youtubePlayer: e.target});\r\n            e.target.playVideo();\r\n            const memoList = document.getElementById(\"memoList\");\r\n            memoList.value = e.target;\r\n            onStateChangeId = true;\r\n            setTimeout(_onTimeChange(e.target), 100);\r\n        }\r\n\r\n        let onClickMemoAdd = (e) => {\r\n            if (this.state.youtubePlayer !== null)\r\n                alert(this.state.youtubePlayer.getCurrentTime());\r\n        }\r\n\r\n        let _onChangeTitle = (e) => {\r\n            this.setState({\r\n                title: e.target.value\r\n            });\r\n        }\r\n        let _onChageContent = (e) => {\r\n            this.setState({\r\n                content: e.target.value\r\n            });\r\n        }\r\n\r\n        let _onChangeVideoTime = (index) => {\r\n            this.setState({\r\n                title: memosWithIndex[index].memoTitle,\r\n                content: memosWithIndex[index].memoContent\r\n            });\r\n            memoIndex = index;\r\n        }\r\n\r\n        let _onStateChange = (e) => {\r\n            onStateChangeId = false;\r\n            let cState = e.target.getPlayerState();\r\n            switch(cState) {\r\n                case -1:\r\n                    // 시작되지 않음\r\n                    break;\r\n                case 0:\r\n                    // 종료\r\n                    break;\r\n                case 1:\r\n                    onStateChangeId=true; setTimeout(_onTimeChange(e.target), 100);\r\n                    // 재생중\r\n                    break;\r\n                case 2:\r\n                    // 일시중지\r\n                    break;\r\n                case 3:\r\n                    // 버퍼링\r\n                    break;\r\n                case 5:\r\n                    // 버퍼링\r\n                    break\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        \r\n\r\n        let _onTimeChange = (youtubeVideoPlayer) => {\r\n            let clearTime = setInterval(() => {\r\n                    if(!onStateChangeId) clearTimeout(clearTime);\r\n                    let cTime = Number.parseInt(youtubeVideoPlayer.getCurrentTime());\r\n                    let cMemo = memosWithIndex.map(memo => memo).filter(memo => memo.memoVideoTime === cTime);\r\n                    if (cMemo.length > 0) {\r\n                        this.setState({\r\n                            title: cMemo[0].memoTitle,\r\n                            content: cMemo[0].memoContent\r\n                        });\r\n                    }\r\n                }, 500);\r\n        }\r\n\r\n        let memoArray = memosWithIndex.map(memo => <Memo onStateChange={_onChangeVideoTime} key={memo.memoId} memo={memo} />);\r\n        return (\r\n            <div className=\"NoteDetail\">\r\n                <div className=\"YoutubeVideo\">\r\n                    <Youtube className=\"YoutubeVideoI\" videoId={this.props.note.noteURL} onReady={_onReady} onStateChange={_onStateChange} />\r\n                    <div className=\"current-memo\">\r\n                        <div>\r\n                            <input className=\"current-memo-title common\" \r\n                                 onChange={_onChangeTitle} value={this.props.note.title}></input>\r\n                            <input className=\"current-memo-content common\" \r\n                                 onChange={_onChageContent} value={this.props.note.content}></input>\r\n                        </div>\r\n                        <button className=\"memo-add-button\" onClick={onClickMemoAdd}>ADD</button>\r\n                    </div>\r\n                </div>\r\n                <div id=\"memoList\" className=\"MemoList\" value=\"\">\r\n                    {memoArray}\r\n                </div>\r\n            </div>\r\n        )\r\n    };\r\n}"]},"metadata":{},"sourceType":"module"}