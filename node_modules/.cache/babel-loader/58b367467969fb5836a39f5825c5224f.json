{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\test-study-redux\\\\src\\\\components\\\\Nav.js\";\nimport React, { Component } from 'react';\nimport store from '../store';\nimport Category from './Nav/Category';\nimport './Nav.css';\nimport httpGetConnection from '../modules/httpConnection/httpGetConnection';\nimport CURL from '../modules/url';\nimport { FaExpandArrowsAlt, FaRegStickyNote } from 'react-icons/fa';\nexport default class Nav extends Component {\n  constructor(props) {\n    super(props);\n    this.mount = false;\n    store.subscribe(() => {\n      if (this.mount) {\n        this.setState(store.getState());\n      }\n    });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.props.categoryArr === nextProps.categoryArr) return false;\n    return true;\n  }\n\n  componentDidMount() {\n    this.mount = true; //let url =\"http://localhost:9000\";\n\n    let url = CURL.url + \"getusercategorylist\"; //let url =  \"http://110.11.49.218:8080/myapp/getusercategorylist\";\n\n    httpGetConnection(url, {\n      userEmail: 'vrimd1017@gmail.com'\n    }, responseJson => {\n      store.dispatch({\n        type: \"CATEGORYS_LOAD\",\n        categoryArr: responseJson\n      });\n    }, () => {\n      alert(\"Connection Fail\");\n    });\n  }\n\n  render() {\n    let _onExtendNavMod = store.getState().onExtendNavMod;\n    let _categoryArr = this.props.categoryArr;\n    let _categoryList = [];\n\n    if (_categoryArr !== undefined) {\n      _categoryArr.forEach(element => {\n        _categoryList.push( /*#__PURE__*/React.createElement(Category, {\n          key: element.categoryCode,\n          category: element,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 32\n          }\n        }));\n      });\n    }\n\n    let onClickNavCategoryTab = e => {\n      store.dispatch({\n        type: 'EXTEND_NAV',\n        onExtendNavMod: !_onExtendNavMod\n      });\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FaRegStickyNote, {\n      className: \"Nav-home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FaExpandArrowsAlt, {\n      className: \"Nav-category-tab\",\n      onClick: onClickNavCategoryTab,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"Nav-category-items\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, _categoryList), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"Nav-category-foot\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, \"foot\"));\n  }\n\n}","map":{"version":3,"sources":["D:/react/test-study-redux/src/components/Nav.js"],"names":["React","Component","store","Category","httpGetConnection","CURL","FaExpandArrowsAlt","FaRegStickyNote","Nav","constructor","props","mount","subscribe","setState","getState","shouldComponentUpdate","nextProps","nextState","categoryArr","componentDidMount","url","userEmail","responseJson","dispatch","type","alert","render","_onExtendNavMod","onExtendNavMod","_categoryArr","_categoryList","undefined","forEach","element","push","categoryCode","onClickNavCategoryTab","e"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAO,WAAP;AACA,OAAOC,iBAAP,MAA8B,6CAA9B;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,SAAQC,iBAAR,EAA2BC,eAA3B,QAAiD,gBAAjD;AAEA,eAAe,MAAMC,GAAN,SAAkBP,SAAlB,CAA4B;AAEzCQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SADnBC,KACmB,GADX,KACW;AAEjBT,IAAAA,KAAK,CAACU,SAAN,CAAgB,MAAI;AAChB,UAAG,KAAKD,KAAR,EAAe;AACb,aAAKE,QAAL,CAAcX,KAAK,CAACY,QAAN,EAAd;AACD;AACJ,KAJD;AAKD;;AAEDC,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AAC1C,QAAG,KAAKP,KAAL,CAAWQ,WAAX,KAA2BF,SAAS,CAACE,WAAxC,EACI,OAAO,KAAP;AACJ,WAAO,IAAP;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKR,KAAL,GAAa,IAAb,CADkB,CAElB;;AACA,QAAIS,GAAG,GAAGf,IAAI,CAACe,GAAL,GAAU,qBAApB,CAHkB,CAIlB;;AACAhB,IAAAA,iBAAiB,CAACgB,GAAD,EAAM;AAACC,MAAAA,SAAS,EAAC;AAAX,KAAN,EACfC,YAAD,IAAgB;AACdpB,MAAAA,KAAK,CAACqB,QAAN,CAAe;AAACC,QAAAA,IAAI,EAAC,gBAAN;AACfN,QAAAA,WAAW,EAAGI;AADC,OAAf;AAEC,KAJa,EAKd,MAAM;AAACG,MAAAA,KAAK,CAAC,iBAAD,CAAL;AAAyB,KALlB,CAAjB;AAOD;;AAECC,EAAAA,MAAM,GAAG;AAEP,QAAIC,eAAe,GAAEzB,KAAK,CAACY,QAAN,GAAiBc,cAAtC;AACA,QAAIC,YAAY,GAAG,KAAKnB,KAAL,CAAWQ,WAA9B;AACA,QAAIY,aAAa,GAAG,EAApB;;AAEA,QAAGD,YAAY,KAAKE,SAApB,EAA+B;AAC5BF,MAAAA,YAAY,CAACG,OAAb,CAAqBC,OAAO,IAAI;AAC7BH,QAAAA,aAAa,CAACI,IAAd,eAAmB,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAED,OAAO,CAACE,YAAvB;AAAqC,UAAA,QAAQ,EAAEF,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAnB;AACF,OAFD;AAGF;;AACD,QAAIG,qBAAqB,GAAGC,CAAC,IAAI;AAC7BnC,MAAAA,KAAK,CAACqB,QAAN,CAAe;AAACC,QAAAA,IAAI,EAAC,YAAN;AAAoBI,QAAAA,cAAc,EAAG,CAACD;AAAtC,OAAf;AACH,KAFD;;AAIA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,eAAD;AAAiB,MAAA,SAAS,EAAC,UAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,iBAAD;AACE,MAAA,SAAS,EAAC,kBADZ;AAC+B,MAAA,OAAO,EAAES,qBADxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAIE;AAAI,MAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKN,aADL,CAJF,eAOE;AAAG,MAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,CADF;AAWD;;AAzDsC","sourcesContent":["import React, {Component} from 'react';\r\nimport store from '../store';\r\nimport Category from './Nav/Category';\r\nimport './Nav.css';\r\nimport httpGetConnection from '../modules/httpConnection/httpGetConnection';\r\nimport CURL from '../modules/url';\r\nimport {FaExpandArrowsAlt, FaRegStickyNote} from 'react-icons/fa';\r\n\r\nexport default class Nav extends Component {\r\n  mount = false;\r\n  constructor(props) {\r\n    super(props);\r\n    store.subscribe(()=>{\r\n        if(this.mount) {\r\n          this.setState(store.getState());\r\n        }\r\n    });\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if(this.props.categoryArr === nextProps.categoryArr) \r\n        return false;\r\n    return true;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.mount = true;\r\n    //let url =\"http://localhost:9000\";\r\n    let url = CURL.url +\"getusercategorylist\";\r\n    //let url =  \"http://110.11.49.218:8080/myapp/getusercategorylist\";\r\n    httpGetConnection(url, {userEmail:'vrimd1017@gmail.com'}, \r\n     (responseJson)=>{\r\n       store.dispatch({type:\"CATEGORYS_LOAD\", \r\n       categoryArr : responseJson\r\n     })},\r\n       () => {alert(\"Connection Fail\")}\r\n     ); \r\n  }\r\n  \r\n    render() { \r\n\r\n      let _onExtendNavMod =store.getState().onExtendNavMod;\r\n      let _categoryArr = this.props.categoryArr;\r\n      let _categoryList = [];\r\n\r\n      if(_categoryArr !== undefined) {\r\n         _categoryArr.forEach(element => {\r\n            _categoryList.push(<Category key={element.categoryCode} category={element}/>);\r\n         });\r\n      }\r\n      let onClickNavCategoryTab = e => {\r\n          store.dispatch({type:'EXTEND_NAV', onExtendNavMod:  !_onExtendNavMod});\r\n      }\r\n\r\n      return(\r\n        <div className=\"Nav\">\r\n          <FaRegStickyNote className=\"Nav-home\"/>\r\n          <FaExpandArrowsAlt \r\n            className=\"Nav-category-tab\" onClick={onClickNavCategoryTab}/>\r\n          <ul className=\"Nav-category-items\">\r\n              {_categoryList}\r\n          </ul>\r\n          <p className=\"Nav-category-foot\">foot</p>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  "]},"metadata":{},"sourceType":"module"}