{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\test-study-redux\\\\src\\\\components\\\\Main\\\\Note\\\\NoteDetail.js\";\nimport React, { Component } from 'react';\nimport Memo from './Memo';\nimport Youtube from 'react-youtube';\nimport httpGetConnection from '../../../modules/httpConnection/httpGetConnection';\nimport './NoteDetail.css';\nexport default class NoteDetail extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      memoList: [],\n      title: \"This will be Title section\",\n      content: \"This will be Content section\",\n      youtubePlayer: null\n    };\n  }\n\n  async componentDidMount() {\n    let _noteCode = this.props.note.noteCode;\n    let _memoList = [];\n\n    if (_noteCode !== undefined | null) {\n      let url = \"http://110.11.49.218:8080/myapp/getNoteItems\";\n      _memoList = await httpGetConnection(url, {\n        userEmail: 'vrimd1017@gmail.com',\n        noteCode: _noteCode\n      }, () => {}, () => {\n        alert(\"Connection Fail\");\n      });\n    }\n\n    this.setState({\n      memoList: _memoList\n    });\n  }\n\n  render() {\n    let memoIndex = -1;\n    let onStateChangeId = null;\n    let memosWithIndex = this.state.memoList.map(memo => Object.assign(memo, {\n      index: ++memoIndex\n    }));\n\n    let _onReady = e => {\n      this.setState({\n        youtubePlayer: e.target\n      });\n      e.target.playVideo();\n      const memoList = document.getElementById(\"memoList\");\n      memoList.value = e.target;\n      onStateChangeId = true;\n      setTimeout(_onTimeChange(e.target), 100);\n    };\n\n    let onClickMemoAdd = e => {\n      if (this.state.youtubePlayer !== null) {\n        let currentTime = Number.parseInt(this.state.youtubePlayer.getCurrentTime());\n        alert(`${this.state.title} : ${this.state.content} : ${currentTime}`);\n      }\n    };\n\n    let _onChangeTitle = e => {\n      this.setState({\n        title: e.target.value\n      });\n    };\n\n    let _onChageContent = e => {\n      this.setState({\n        content: e.target.value\n      });\n    };\n\n    let _onChangeVideoTime = index => {\n      this.setState({\n        title: memosWithIndex[index].memoTitle,\n        content: memosWithIndex[index].memoContent\n      });\n      memoIndex = index;\n    };\n\n    let _onStateChange = e => {\n      onStateChangeId = false;\n      let cState = e.target.getPlayerState();\n\n      switch (cState) {\n        case -1:\n          // 시작되지 않음\n          break;\n\n        case 0:\n          // 종료\n          break;\n\n        case 1:\n          onStateChangeId = true;\n          setTimeout(_onTimeChange(e.target), 100); // 재생중\n\n          break;\n\n        case 2:\n          // 일시중지\n          break;\n\n        case 3:\n          // 버퍼링\n          break;\n\n        case 5:\n          // 버퍼링\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    let _onTimeChange = youtubeVideoPlayer => {\n      let clearTime = setInterval(() => {\n        if (!onStateChangeId) clearTimeout(clearTime);\n        let cTime = Number.parseInt(youtubeVideoPlayer.getCurrentTime());\n        let cMemo = memosWithIndex.map(memo => memo).filter(memo => memo.memoTime === cTime);\n\n        if (cMemo.length > 0) {\n          this.setState({\n            title: cMemo[0].memoTitle,\n            content: cMemo[0].memoContent\n          });\n        }\n      }, 500);\n    };\n\n    let memoArray = memosWithIndex.map(memo => /*#__PURE__*/React.createElement(Memo, {\n      onStateChange: _onChangeVideoTime,\n      key: memo.memoCode,\n      memo: memo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 52\n      }\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"NoteDetail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"YoutubeVideo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Youtube, {\n      className: \"YoutubeVideoI\",\n      videoId: this.props.note.noteURL,\n      onReady: _onReady,\n      onStateChange: _onStateChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"current-memo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"current-memo-title common\",\n      onChange: _onChangeTitle,\n      value: this.state.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"current-memo-content common\",\n      onChange: _onChageContent,\n      value: this.state.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"memo-add-button\",\n      onClick: onClickMemoAdd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 25\n      }\n    }, \"ADD\"))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"memoList\",\n      className: \"MemoList\",\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, memoArray));\n  }\n\n}","map":{"version":3,"sources":["D:/react/test-study-redux/src/components/Main/Note/NoteDetail.js"],"names":["React","Component","Memo","Youtube","httpGetConnection","NoteDetail","state","memoList","title","content","youtubePlayer","componentDidMount","_noteCode","props","note","noteCode","_memoList","undefined","url","userEmail","alert","setState","render","memoIndex","onStateChangeId","memosWithIndex","map","memo","Object","assign","index","_onReady","e","target","playVideo","document","getElementById","value","setTimeout","_onTimeChange","onClickMemoAdd","currentTime","Number","parseInt","getCurrentTime","_onChangeTitle","_onChageContent","_onChangeVideoTime","memoTitle","memoContent","_onStateChange","cState","getPlayerState","youtubeVideoPlayer","clearTime","setInterval","clearTimeout","cTime","cMemo","filter","memoTime","length","memoArray","memoCode","noteURL"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Memo from './Memo';\r\nimport Youtube from 'react-youtube';\r\nimport httpGetConnection from '../../../modules/httpConnection/httpGetConnection';\r\nimport './NoteDetail.css';\r\n\r\n\r\n\r\nexport default class NoteDetail extends Component {\r\n    state = {\r\n        memoList: [],\r\n        title: \"This will be Title section\",\r\n        content: \"This will be Content section\",\r\n        youtubePlayer: null\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let _noteCode = this.props.note.noteCode\r\n        let _memoList = [];\r\n        if (_noteCode !== undefined | null) {\r\n          let url = \"http://110.11.49.218:8080/myapp/getNoteItems\";\r\n          _memoList = await httpGetConnection(url, { userEmail: 'vrimd1017@gmail.com', noteCode: _noteCode },\r\n            () =>{}\r\n            ,\r\n            () => { alert(\"Connection Fail\") }\r\n          )\r\n        }\r\n        this.setState({memoList:_memoList});\r\n    }\r\n\r\n    render() {\r\n        let memoIndex = -1;\r\n        let onStateChangeId = null;\r\n\r\n        let memosWithIndex = this.state.memoList.map(memo => Object.assign(memo, { index: ++memoIndex }))\r\n        let _onReady = (e) => {\r\n            this.setState({youtubePlayer: e.target});\r\n            e.target.playVideo();\r\n            const memoList = document.getElementById(\"memoList\");\r\n            memoList.value = e.target;\r\n            onStateChangeId = true;\r\n            setTimeout(_onTimeChange(e.target), 100);\r\n        }\r\n\r\n        let onClickMemoAdd = (e) => {\r\n            if (this.state.youtubePlayer !== null) {\r\n                let currentTime = Number.parseInt(this.state.youtubePlayer.getCurrentTime());\r\n                alert(`${this.state.title} : ${this.state.content} : ${currentTime}`);\r\n            }\r\n        }\r\n\r\n        let _onChangeTitle = (e) => {\r\n            this.setState({\r\n                title: e.target.value\r\n            });\r\n        }\r\n        let _onChageContent = (e) => {\r\n            this.setState({\r\n                content: e.target.value\r\n            });\r\n        }\r\n\r\n        let _onChangeVideoTime = (index) => {\r\n            this.setState({\r\n                title: memosWithIndex[index].memoTitle,\r\n                content: memosWithIndex[index].memoContent\r\n            });\r\n            memoIndex = index;\r\n        }\r\n\r\n        let _onStateChange = (e) => {\r\n            onStateChangeId = false;\r\n            let cState = e.target.getPlayerState();\r\n            switch(cState) {\r\n                case -1:\r\n                    // 시작되지 않음\r\n                    break;\r\n                case 0:\r\n                    // 종료\r\n                    break;\r\n                case 1:\r\n                    onStateChangeId=true; setTimeout(_onTimeChange(e.target), 100);\r\n                    // 재생중\r\n                    break;\r\n                case 2:\r\n                    // 일시중지\r\n                    break;\r\n                case 3:\r\n                    // 버퍼링\r\n                    break;\r\n                case 5:\r\n                    // 버퍼링\r\n                    break\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        \r\n\r\n        let _onTimeChange = (youtubeVideoPlayer) => {\r\n            let clearTime = setInterval(() => {\r\n                    if(!onStateChangeId) clearTimeout(clearTime);\r\n                    let cTime = Number.parseInt(youtubeVideoPlayer.getCurrentTime());\r\n                    let cMemo = memosWithIndex.map(memo => memo).filter(memo => memo.memoTime === cTime);\r\n                    if (cMemo.length > 0) {\r\n                        this.setState({\r\n                            title: cMemo[0].memoTitle,\r\n                            content: cMemo[0].memoContent\r\n                        });\r\n                    }\r\n                }, 500);\r\n        }\r\n\r\n        let memoArray = memosWithIndex.map(memo => <Memo onStateChange={_onChangeVideoTime} key={memo.memoCode} memo={memo} />);\r\n        return (\r\n            <div className=\"NoteDetail\">\r\n                <div className=\"YoutubeVideo\">\r\n                    <Youtube className=\"YoutubeVideoI\" videoId={this.props.note.noteURL} onReady={_onReady} onStateChange={_onStateChange} />\r\n                    <div className=\"current-memo\">\r\n                        <div>\r\n                            <input className=\"current-memo-title common\" \r\n                                 onChange={_onChangeTitle} value={this.state.title}></input>\r\n                            <input className=\"current-memo-content common\" \r\n                                 onChange={_onChageContent} value={this.state.content}></input>\r\n                        </div>\r\n                        <button className=\"memo-add-button\" onClick={onClickMemoAdd}>ADD</button>\r\n                    </div>\r\n                </div>\r\n                <div id=\"memoList\" className=\"MemoList\" value=\"\">\r\n                    {memoArray}\r\n                </div> \r\n            </div>\r\n        )\r\n    };\r\n}"]},"metadata":{},"sourceType":"module"}