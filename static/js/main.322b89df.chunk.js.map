{"version":3,"sources":["components/Header/Auth.js","components/Header/Search.js","components/Header.js","modules/httpConnection/httpGetConnection.js","modules/url.js","components/Main/Note/Memo.js","components/Main/Note/NoteDetail.js","components/Main/Note.js","store.js","components/Main.js","components/Nav/Category.js","components/Nav.js","components/WholeNavModal.js","App.js","serviceWorker.js","index.js"],"names":["Auth","className","Component","Search","type","Header","httpGetConnection","url","parameters","resSuc","resFail","a","plusParamsUrl","Object","keys","forEach","key","slice","length","console","log","fetch","method","headers","then","res","json","catch","err","Memo","state","title","props","memo","memoTitle","content","memoContent","this","_onDeleteClick","e","CURL","_memo","memoCode","Number","parseInt","noteCode","_newMemoList","memoListUpdate","_onUpdateClick","modify","document","getElementById","real","style","display","memoHour","memoTime","memoMin","id","onChange","setState","target","value","onClick","href","preventDefault","memoList","seekTo","dataset","memoVideoTime","NoteDetail","youtubePlayer","_noteCode","note","_memoList","undefined","userEmail","alert","memoIndex","onStateChangeId","memosWithIndex","map","assign","index","_memoListUpdate","onClickMemoAdd","currentTime","getCurrentTime","redup","i","_onChangeVideoTime","_onTimeChange","youtubeVideoPlayer","clearTime","setInterval","clearTimeout","cTime","cMemo","filter","memoArray","onStateChange","videoId","noteURL","onReady","playVideo","setTimeout","getPlayerState","Note","onClickNoteExtend","noteTitle","NoteContent","parentElement","lastElementChild","innerHTML","flexDirection","height","src","noteThumbnail","alt","noteContent","noteVideoName","noteVideoTime","noteUpdateDate","createStore","action","onExtendNavMod","onExtendMain","categoryArr","noteArr","categorySelected","window","__REDUX_DEVTOOLS_EXTENSION__","Main","mount","store","subscribe","getState","nextProps","nextState","_categoryCode","categoryCode","responseJson","dispatch","notes","Category","category","subCategoryList","mainCategory","onClickCategoryContent","getAttribute","innerText","element","categoryName","push","Nav","_onExtendNavMod","_categoryArr","_categoryList","WholeNavModal","bind","childElementCount","children","item","opacity","pixel","clear","clearInterval","width","mouseOut","onClickNavCategoryTab","_categoryParent","main","sub","onMouseOut","onMouseEnter","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.322b89df.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {BsPeopleCircle} from 'react-icons/bs';\r\nimport './Auth.css';\r\n\r\nexport default class Auth extends Component {\r\n    render() {\r\n      return(\r\n        <div className=\"Auth\">\r\n            <BsPeopleCircle className=\"Auth-icon\"/>\r\n        </div>\r\n      )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport {RiSearchLine} from 'react-icons/ri';\r\nimport './Search.css';\r\n\r\nexport default class Search extends Component {\r\n    render() {\r\n      return(\r\n            <div className=\"Search\">\r\n                <input className=\"Search-text\" type=\"text\"></input>\r\n                <RiSearchLine className=\"Search-logo\"/>\r\n            </div>\r\n      )\r\n    }\r\n  }","import React, {Component} from 'react';\r\nimport Auth from './Header/Auth';\r\nimport Search from './Header/Search';\r\nimport './Header.css';\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n      return(\r\n        <div className=\"Header\">\r\n            <Search></Search>\r\n            <Auth></Auth>\r\n        </div>\r\n      )\r\n    }\r\n  }"," const httpGetConnection = async (url, parameters, resSuc, resFail) => {\r\n  let plusParamsUrl = url + '?';\r\n  //let plusParamsUrl = url;\r\n  // plus parameters\r\n  if (parameters !== null) {\r\n    let keys = Object.keys(parameters);\r\n    keys.forEach(key => {\r\n      plusParamsUrl += `${key}=${parameters[key]}&`\r\n    });\r\n    plusParamsUrl = plusParamsUrl.slice(0,plusParamsUrl.length-1);\r\n  }\r\n  console.log('cccc',plusParamsUrl);\r\n  let json = await fetch(plusParamsUrl, {\r\n    method: 'GET',\r\n    headers:{\r\n      'Authorization' : 'Bearer'\r\n    }\r\n  })\r\n    .then(res => res.json())\r\n    .catch(err => console.log(err));\r\n    resSuc(json);\r\n\r\n  // creation request\r\n  // let req = new XMLHttpRequest();\r\n  // // request open, with async option is true\r\n  // req.open('GET', plusParamsUrl, false);\r\n  // // set request-header authorization for cors\r\n  // req.setRequestHeader(\"Authorization\", \"Bearer\");\r\n  // req.onreadystatechange = (e) => {\r\n  //   switch (req.readyState) {\r\n  //     case XMLHttpRequest.UNSET:\r\n  //        console.log(\"현재 XMLHttpRequest 객체의 상태는 UNSET 입니다.<br>\");\r\n  //         break;\r\n  //     case XMLHttpRequest.OPENED:\r\n  //        console.log(\"현재 XMLHttpRequest 객체의 상태는 OPENED 입니다.<br>\");\r\n  //         break;\r\n  //     case XMLHttpRequest.HEADERS_RECIEVED:\r\n  //         console.log(\"현재 XMLHttpRequest 객체의 상태는 HEADERS_RECEIVED 입니다.<br>\");\r\n  //         break;\r\n  //     case XMLHttpRequest.LOADING:\r\n  //         console.log(\"현재 XMLHttpRequest 객체의 상태는 LOADING 입니다.<br>\");\r\n  //         break;\r\n  //     case XMLHttpRequest.DONE:\r\n  //         resSuc(req.responseText);\r\n  //         break;\r\n  //     default:\r\n  //         break;\r\n  //   }\r\n  // }\r\n  // req.send(null);\r\n return json;\r\n};\r\n\r\nexport default httpGetConnection;","//let url = {url: \"http://13.209.142.215:8080/PostProject_02/\"};\r\nlet url = {url: \"http://110.11.49.218:8080/myapp/\"};\r\nexport default url;","import React, { Component } from 'react';\r\nimport { AiFillDelete } from 'react-icons/ai';\r\nimport { GrUpdate } from 'react-icons/gr';\r\nimport httpGetConnection from '../../../modules/httpConnection/httpGetConnection';\r\nimport CURL from '../../../modules/url';\r\nimport './Memo.css';\r\n\r\nexport default class Memo extends Component {\r\n    state = {\r\n        title: this.props.memo.memoTitle,\r\n        content: this.props.memo.memoContent\r\n    }\r\n\r\n    render() {\r\n        let memo = this.props.memo;\r\n        let _onClickMemoVideoTime = (e) => {\r\n            e.preventDefault();\r\n            const memoList = document.getElementById(\"memoList\")\r\n            if (memoList.value !== \"\") {\r\n                memoList.value.seekTo(memo.memoTime);\r\n            }\r\n        }\r\n\r\n        let _onDeleteClick = async (e) => {\r\n            let url = CURL.url + 'deleteMemo';\r\n            let _memo = {\r\n                memoCode: Number.parseInt(memo.memoCode),\r\n                noteCode: Number.parseInt(memo.noteCode)\r\n            }\r\n            let _newMemoList = await httpGetConnection(url, _memo,\r\n                () => { },\r\n                () => { });\r\n\r\n            if (_newMemoList)\r\n                this.props.memoListUpdate(_newMemoList);\r\n        }\r\n\r\n        let _onUpdateDivClick = (e) => {\r\n            const modify = document.getElementById(`Memo-modify-${memo.memoCode}`);\r\n            const real = document.getElementById(`Memo-real-${memo.memoCode}`);\r\n            if (modify.style.display === 'none') {\r\n                real.style.display = 'none'\r\n                modify.style.display = 'flex';\r\n            } else {\r\n                modify.style.display = 'none';\r\n                real.style.display = 'flex';\r\n            }\r\n        }\r\n\r\n        let _onUpdateClick = async (e) => {\r\n            const modify = document.getElementById(`Memo-modify-${memo.memoCode}`);\r\n            const real = document.getElementById(`Memo-real-${memo.memoCode}`);\r\n            \r\n            let url = CURL.url + 'updateMemo';\r\n            let _memo = {\r\n                memoTitle: this.state.title,\r\n                memoContent: this.state.content,\r\n                memoCode: Number.parseInt(memo.memoCode),\r\n                noteCode: Number.parseInt(memo.noteCode)\r\n            }\r\n            let _newMemoList = await httpGetConnection(url, _memo,\r\n                () => { },\r\n                () => { });\r\n            if (_newMemoList)\r\n                this.props.memoListUpdate(_newMemoList);\r\n            modify.style.display = 'none';\r\n            real.style.display = 'flex';\r\n        }\r\n\r\n        let _onChangeTitle = (e) => {\r\n            this.setState({\r\n                title: e.target.value\r\n            });\r\n        }\r\n        let _onChageContent = (e) => {\r\n            this.setState({\r\n                content: e.target.value\r\n            });\r\n        }\r\n        let memoHour = Number.parseInt(memo.memoTime / 60);\r\n        if(memoHour<10) memoHour = '0' + memoHour;\r\n        let memoMin = memo.memoTime % 60;\r\n        if(memoMin<10) memoMin = '0' + memoMin;\r\n\r\n        return (\r\n            <div className=\"Memo\">\r\n                <div id={\"Memo-modify-\"+ memo.memoCode} className=\"Memo-modify\">\r\n                    <input className=\"current-memo-title common\"\r\n                        onChange={_onChangeTitle} value={this.state.title}></input>\r\n                    <input className=\"current-memo-content common\"\r\n                        onChange={_onChageContent} value={this.state.content}></input>\r\n                    <button onClick={_onUpdateClick}>update</button>\r\n                </div>\r\n                <div id={\"Memo-real-\"+ memo.memoCode} className=\"Memo-real\">\r\n                    <div className=\"MemoTitle\">\r\n                        {memo.memoTitle}\r\n                    </div>\r\n                    <div className=\"MemoDesc\">{memo.memoContent}</div>\r\n                </div>\r\n                <div className=\"Memo-etc\">\r\n                    <a href=\"/content\" className=\"MemoVideoTime\" onClick={_onClickMemoVideoTime} dataset={{ value: memo.memoVideoTime }}>\r\n                        <div value={memo.memoTime}>{`${memoHour}:${memoMin}`} </div>\r\n                    </a>\r\n                    <button className=\"update Memo-button\" onClick={_onUpdateDivClick}><GrUpdate   /></button>\r\n                    <button className=\"delete Memo-button\" onClick={_onDeleteClick}><AiFillDelete  /></button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Memo from './Memo';\r\nimport Youtube from 'react-youtube';\r\nimport httpGetConnection from '../../../modules/httpConnection/httpGetConnection';\r\nimport httpJsonConnection from '../../../modules/httpConnection/httpJsonConnection';\r\nimport CURL from '../../../modules/url';\r\nimport './NoteDetail.css';\r\n\r\n\r\n\r\nexport default class NoteDetail extends Component {\r\n    state = {\r\n        memoList: [],\r\n        title: \"This will be Title section\",\r\n        content: \"This will be Content section\",\r\n        youtubePlayer: null\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let _noteCode = this.props.note.noteCode\r\n        let _memoList = [];\r\n        if (_noteCode !== undefined | null) {\r\n            let url = CURL.url + \"getNoteItems\"\r\n          _memoList = await httpGetConnection(url, { userEmail: 'vrimd1017@gmail.com', noteCode: _noteCode },\r\n            () =>{}\r\n            ,\r\n            () => { alert(\"Connection Fail\") }\r\n          )\r\n        }\r\n        this.setState({memoList:_memoList});\r\n    }\r\n\r\n    render() {\r\n        let memoIndex = -1;\r\n        let onStateChangeId = null;\r\n\r\n        let memosWithIndex = this.state.memoList.map(memo => Object.assign(memo, { index: ++memoIndex }))\r\n        let _onReady = (e) => {\r\n            this.setState({youtubePlayer: e.target});\r\n            e.target.playVideo();\r\n            const memoList = document.getElementById(\"memoList\");\r\n            memoList.value = e.target;\r\n            onStateChangeId = true;\r\n            setTimeout(_onTimeChange(e.target), 100);\r\n        }\r\n\r\n        let _memoListUpdate = (_memoList) => {\r\n            this.setState({memoList: _memoList});\r\n        }\r\n\r\n        let onClickMemoAdd = async (e) => {\r\n            if (this.state.youtubePlayer !== null) {\r\n                let url = CURL.url + 'insertMemo2';\r\n                let currentTime = Number.parseInt(this.state.youtubePlayer.getCurrentTime());\r\n                let redup = false;\r\n                for(let i=0; i<memosWithIndex.length; i++) {\r\n                    if(currentTime===Number.parseInt(memosWithIndex[i].memoTime)) redup = true;\r\n                }\r\n                if(redup) {alert(\"reduplication\"); return;}\r\n                let _memo= { memoTitle: this.state.title, \r\n                             memoContent:this.state.content, \r\n                             memoTime:currentTime,\r\n                             noteCode: Number.parseInt(this.props.noteCode)\r\n                            };\r\n                //JSON.stringify(_memo);\r\n                let _newMemoList = await httpGetConnection(url, _memo,\r\n                   ()=>{},\r\n                   ()=>{});\r\n\r\n                if(_newMemoList)\r\n                   _memoListUpdate(_newMemoList);\r\n            }\r\n        }\r\n\r\n        let _onChangeTitle = (e) => {\r\n            this.setState({\r\n                title: e.target.value\r\n            });\r\n        }\r\n        let _onChageContent = (e) => {\r\n            this.setState({\r\n                content: e.target.value\r\n            });\r\n        }\r\n\r\n        let _onChangeVideoTime = (index) => {\r\n            this.setState({\r\n                title: memosWithIndex[index].memoTitle,\r\n                content: memosWithIndex[index].memoContent\r\n            });\r\n            memoIndex = index;\r\n        }\r\n\r\n        let _onStateChange = (e) => {\r\n            onStateChangeId = false;\r\n            let cState = e.target.getPlayerState();\r\n            switch(cState) {\r\n                case -1:\r\n                    // 시작되지 않음\r\n                    break;\r\n                case 0:\r\n                    // 종료\r\n                    break;\r\n                case 1:\r\n                    onStateChangeId=true; setTimeout(_onTimeChange(e.target), 100);\r\n                    // 재생중\r\n                    break;\r\n                case 2:\r\n                    // 일시중지\r\n                    break;\r\n                case 3:\r\n                    // 버퍼링\r\n                    break;\r\n                case 5:\r\n                    // 버퍼링\r\n                    break\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        \r\n\r\n        let _onTimeChange = (youtubeVideoPlayer) => {\r\n            let clearTime = setInterval(() => {\r\n                    if(!onStateChangeId) clearTimeout(clearTime);\r\n                    let cTime = Number.parseInt(youtubeVideoPlayer.getCurrentTime());\r\n                    let cMemo = memosWithIndex.map(memo => memo).filter(memo => memo.memoTime === cTime);\r\n                    if (cMemo.length > 0) {\r\n                        this.setState({\r\n                            title: cMemo[0].memoTitle,\r\n                            content: cMemo[0].memoContent\r\n                        });\r\n                    }\r\n                }, 500);\r\n        }\r\n\r\n        let memoArray = memosWithIndex.map(memo => <Memo onStateChange={_onChangeVideoTime} memoListUpdate={_memoListUpdate} key={memo.memoCode} memo={memo} />);\r\n        return (\r\n            <div className=\"NoteDetail\">\r\n                <div className=\"YoutubeVideo\">\r\n                    <Youtube className=\"YoutubeVideoI\" videoId={this.props.note.noteURL} onReady={_onReady} onStateChange={_onStateChange} />\r\n                    <div className=\"current-memo\">\r\n                        <div>\r\n                            <input className=\"current-memo-title common\" \r\n                                 onChange={_onChangeTitle} value={this.state.title}></input>\r\n                            <input className=\"current-memo-content common\" \r\n                                 onChange={_onChageContent} value={this.state.content}></input>\r\n                        </div>\r\n                        <button className=\"memo-add-button\" onClick={onClickMemoAdd}>ADD</button>\r\n                    </div>\r\n                </div>\r\n                <div id=\"memoList\" className=\"MemoList\" value=\"\">\r\n                    {memoArray}\r\n                </div> \r\n            </div>\r\n        )\r\n    };\r\n}","import React, { Component } from 'react';\r\nimport NoteDetail from './Note/NoteDetail';\r\nimport './Note.css';\r\n\r\nexport default class Note extends Component {\r\n  state = {\r\n    onClickNoteExtend: false\r\n  }\r\n\r\n  render() {\r\n    let onClickNoteExtendButton = (e) => {\r\n      const NoteContent = e.target.parentElement.parentElement.lastElementChild;\r\n      const Note = e.target.parentElement.parentElement;\r\n      if (e.target.innerHTML === \"▼\") {\r\n        NoteContent.style.flexDirection=\"column\";\r\n        e.target.innerHTML = \"▲\";\r\n       Note.style.height = \"450px\";\r\n        this.setState({ onClickNoteExtend: true });\r\n      } else {\r\n        NoteContent.style.flexDirection=\"row\";\r\n        e.target.innerHTML = \"▼\";\r\n        Note.style.height = \"150px\";\r\n        this.setState({ onClickNoteExtend: false });\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"Note\">\r\n        <div className=\"Note-header\">\r\n          <div className=\"Note-header-title\">{this.props.Note.noteTitle} </div>\r\n          <button id=\"Note-extend-button-id1\" className=\"Note-button\" onClick={onClickNoteExtendButton}>▼</button>\r\n        </div>\r\n        <div className=\"Note-content\">\r\n          {this.state.onClickNoteExtend ? <NoteDetail note={this.props.Note} key={this.props.Note.noteCode} noteCode={this.props.Note.noteCode}></NoteDetail> : \r\n            <img className=\"Note-content-thumbnail\" src={this.props.Note.noteThumbnail} alt=\"thumbnail\"/>}\r\n          <div className=\"Note-content-desc\">\r\n            <div className=\"Note-content-desc-info\">{this.props.Note.noteContent}</div>\r\n            <div className=\"Note-content-time\">\r\n              <div>{this.props.Note.noteVideoName} {this.props.Note.noteVideoTime} </div>\r\n              <div className=\"Note-content-time-updated\">{this.props.Note.noteUpdateDate}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import {createStore} from 'redux';\r\n\r\n//createstore 안의 function은 reducer\r\nexport default createStore(function(state, action) {\r\n    if(state === undefined) {\r\n        return  {\r\n            onExtendNavMod: false,\r\n            onExtendMain: false,\r\n            categoryArr: [],\r\n            noteArr  : [],\r\n            categorySelected: false\r\n        }        \r\n    }\r\n\r\n    switch(action.type) {\r\n        case 'CATEGORYS_LOAD':\r\n            return Object.assign(state,{categoryArr:action.categoryArr});\r\n        case 'NOTES_LOAD':\r\n            return Object.assign(state,{noteArr:action.noteArr});\r\n        case 'NOTES_LOADED':\r\n            return Object.assign(state,{noteArr:action.noteArr});\r\n        case 'EXTEND_NAV':\r\n            return Object.assign(state,{onExtendNavMod:action.onExtendNavMod});\r\n        case 'EXTEND_MAIN':\r\n            return Object.assign(state,{onExtendMain: action.onExtendMain});\r\n        case 'SELECTED_CATEGORY':\r\n            return Object.assign(state,{categorySelected:action.categorySelected});\r\n        default:\r\n            break;\r\n    }\r\n    return state;\r\n},window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())","\r\nimport React, { Component } from 'react';\r\nimport Note from './Main/Note'\r\nimport './Main.css';\r\nimport store from '../store';\r\nimport httpGetConnection from '../modules/httpConnection/httpGetConnection';\r\n\r\nexport default class Main extends Component {\r\n  mount = false;\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n\r\n    store.subscribe(() => {\r\n      if (this.mount) {\r\n        this.setState(store.getState());\r\n      }\r\n    });\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n\r\n    return true;\r\n  }\r\n\r\n\r\n async componentDidMount() {\r\n    this.mount = true;\r\n\r\n    let _categoryCode = store.getState().categorySelected;\r\n    if (_categoryCode !== false) {\r\n      let url = \"http://110.11.49.218:8080/myapp/getCategoryItems\";\r\n      //let url = \"http://localhost:9000/test2\";\r\n      httpGetConnection(url, { userEmail: 'vrimd1017@gmail.com', categoryCode: _categoryCode },\r\n        (responseJson) => {\r\n          store.dispatch({\r\n            type: \"NOTES_LOADED\",\r\n            noteArr: responseJson\r\n          })\r\n        },\r\n        () => { alert(\"Connection Fail\") }\r\n      )\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let notes = [];\r\n    notes = this.props.noteArr.map(\r\n      note => (<Note key={note.noteCode} Note={note}></Note>)\r\n    );\r\n\r\n    return (\r\n      <div className=\"Main\">\r\n        {store.getState().categorySelected ?\r\n          notes : <p>카테고리 선택해라옹</p>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport store from '../../store';\r\nimport './Category.css';\r\n\r\nexport default class Category extends Component {\r\n  shouldComponentUpdate() {\r\n\r\n  }\r\n  \r\n  render() {\r\n    let category = null;\r\n    let subCategoryList = [];\r\n    let mainCategory = this.props.category;\r\n    let onClickCategoryExtend = (e) => {\r\n      if (e.target.innerText === \"▼\") {\r\n        e.target.innerText = \"▲\";\r\n        mainCategory.categoryArr.forEach(element => {\r\n          document.getElementById('Category-sub-' + element.categoryCode).style.display = 'flex';\r\n    \r\n        });\r\n      } else if (e.target.innerText === \"▲\") {\r\n        e.target.innerText = \"▼\";\r\n        mainCategory.categoryArr.forEach(element => {\r\n          document.getElementById('Category-sub-' + element.categoryCode).style.display = 'none';\r\n        });\r\n      }\r\n    }\r\n\r\n    let onClickCategoryContent = (e) => {\r\n      store.dispatch({ type: 'EXTEND_MAIN', onExtendMain: false });\r\n      store.dispatch({ type: 'SELECTED_CATEGORY', categorySelected: e.target.getAttribute('value') });\r\n    }\r\n\r\n    if (mainCategory !== undefined) {\r\n      category =\r\n        <div className=\"Category\">\r\n          <div className=\"Category-main\" onClick={onClickCategoryExtend}>\r\n            <button id={\"Category-main-button\" + mainCategory.categoryCode} className=\"Category-button\" >▼</button>\r\n            <div className=\"Category-content\" onClick={onClickCategoryContent} value={mainCategory.categoryCode}>{mainCategory.categoryName}</div>\r\n          </div>\r\n          {mainCategory.categoryArr.forEach(element => {\r\n            subCategoryList.push(<div key={element.categoryCode} id={\"Category-sub-\" + element.categoryCode} className=\"Category-sub\">\r\n              <div className=\"Category-content\" onClick={onClickCategoryContent} value={element.categoryCode}>{element.categoryName}</div>\r\n            </div>)\r\n          })}\r\n          {subCategoryList}\r\n        </div>\r\n    }\r\n\r\n    return (\r\n      <li className=\"Nav-category-item\">\r\n        {category}\r\n      </li>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react';\r\nimport store from '../store';\r\nimport Category from './Nav/Category';\r\nimport './Nav.css';\r\nimport httpGetConnection from '../modules/httpConnection/httpGetConnection';\r\nimport CURL from '../modules/url';\r\nimport {FaExpandArrowsAlt, FaRegStickyNote} from 'react-icons/fa';\r\nimport {GiFootPlaster} from 'react-icons/gi';\r\n\r\nexport default class Nav extends Component {\r\n  mount = false;\r\n  constructor(props) {\r\n    super(props);\r\n    store.subscribe(()=>{\r\n        if(this.mount) {\r\n          this.setState(store.getState());\r\n        }\r\n    });\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if(this.props.categoryArr === nextProps.categoryArr) \r\n        return false;\r\n    return true;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.mount = true;\r\n    //let url =\"http://localhost:9000\";\r\n    let url = CURL.url +\"getusercategorylist\";\r\n    //let url =  \"http://110.11.49.218:8080/myapp/getusercategorylist\";\r\n    httpGetConnection(url, {userEmail:'vrimd1017@gmail.com'}, \r\n     (responseJson)=>{\r\n       store.dispatch({type:\"CATEGORYS_LOAD\", \r\n       categoryArr : responseJson\r\n     })},\r\n       () => {alert(\"Connection Fail\")}\r\n     ); \r\n  }\r\n  \r\n    render() { \r\n\r\n      let _onExtendNavMod =store.getState().onExtendNavMod;\r\n      let _categoryArr = this.props.categoryArr;\r\n      let _categoryList = [];\r\n\r\n      if(_categoryArr !== undefined) {\r\n         _categoryArr.forEach(element => {\r\n            _categoryList.push(<Category key={element.categoryCode} category={element}/>);\r\n         });\r\n      }\r\n      let onClickNavCategoryTab = e => {\r\n          store.dispatch({type:'EXTEND_NAV', onExtendNavMod:  !_onExtendNavMod});\r\n      }\r\n\r\n      return(\r\n        <div className=\"Nav\">\r\n          <FaRegStickyNote className=\"Nav-home\"/>\r\n          <FaExpandArrowsAlt \r\n            className=\"Nav-category-tab\" onClick={onClickNavCategoryTab}/>\r\n          <ul className=\"Nav-category-items\">\r\n              {_categoryList}\r\n          </ul>\r\n          <GiFootPlaster className=\"Nav-category-foot\" />\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  ","import React, { Component } from 'react';\r\nimport store from '../store';\r\nimport { BsArrowsAngleContract } from 'react-icons/bs';\r\nimport './WholeNavModal.css';\r\n\r\nexport default class WholeNavModal extends Component {\r\n  mount = false;\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    store.subscribe(() => {\r\n      if (this.mount) {\r\n        this.setState(store.getState());\r\n      }\r\n    }).bind(this);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.mount = true;\r\n    const WholeNavModal = document.getElementById(\"WholeNavModelId\");\r\n    for (let i = 0; i < WholeNavModal.childElementCount; i++)\r\n      WholeNavModal.children.item(i).style.opacity = \"0\";\r\n    WholeNavModal.style.display = \"flex\";\r\n\r\n    setTimeout(() => {\r\n      let pixel = 0;\r\n      let clear = setInterval(() => {\r\n        if (pixel === 400) {\r\n          setInterval(() => {\r\n            for (let i = 0; i < WholeNavModal.childElementCount; i++)\r\n              WholeNavModal.children.item(i).style.opacity = \"100\";\r\n          }, 200);\r\n          clearInterval(clear);\r\n        }\r\n        pixel += 50;\r\n        WholeNavModal.style.width = `${pixel}px`;\r\n        WholeNavModal.style.height = `${pixel}px`;\r\n\r\n      }, 30);\r\n    }, 20);\r\n  }\r\n\r\n  render() {\r\n    let mouseOut = false;\r\n\r\n    let onClickNavCategoryTab = e => {\r\n      store.dispatch({ type: 'EXTEND_NAV', onExtendNavMod: false });\r\n    }\r\n\r\n    let _onMouseOut = (e) => {\r\n      mouseOut = true;\r\n    }\r\n\r\n    let _onMouseOver = (e) => {\r\n      mouseOut = false;\r\n    }\r\n\r\n    let _onClickOuter = (e) => {\r\n      if(mouseOut)\r\n        onClickNavCategoryTab();\r\n    }\r\n\r\n    let _categoryArr = this.props.categoryArr;\r\n    let _categoryParent = [];\r\n\r\n    if (_categoryArr !== undefined) {\r\n      _categoryArr.forEach(main => {\r\n        let subCategoryList = [];\r\n        main.categoryArr.forEach(sub => {\r\n          subCategoryList.push(<div key={sub.categoryName} className=\"whole-category-sub\">{sub.categoryName}</div>)\r\n        });\r\n        _categoryParent.push(\r\n          <div key={main.categoryName} className=\"whole-category-parent\">\r\n            <div key={main.categoryName} className=\"whole-category-main\">{main.categoryName}</div>\r\n            {subCategoryList}\r\n          </div>\r\n        )\r\n      });\r\n    }\r\n\r\n\r\n    return (\r\n      <div id=\"WholeNavModelId\" className=\"WholeNavModal\" onMouseOut={_onMouseOut} onMouseEnter={_onMouseOver}>\r\n        <div className=\"WholeNavModal-content\">\r\n          <button className=\"WholeNavModal-exit-button\"\r\n            onClick={onClickNavCategoryTab}><BsArrowsAngleContract /></button>\r\n          {_categoryParent}\r\n        </div>\r\n        <div className=\"WholeNavModeOuter\" onClick={_onClickOuter} />\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport Nav from './components/Nav';\nimport WholeNavModal from './components/WholeNavModal';\nimport './App.css';\nimport store from './store';\n\nclass App extends Component {\n  mount = false;\n  constructor(props) {\n    super(props);\n    this.state = {\n      onExtendNavMod: false,\n      onExtendMain: false,\n      categoryArr: [],\n      noteArr  : [],\n      categorySelected: false\n    }\n\n    store.subscribe(function () {\n      if(this.mount===true) {\n        this.setState(store.getState())\n      }\n    }.bind(this));\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if(this.state.categorySelected===false&&nextState.categorySelected===false)\n      return true;\n    if(this.state.categorySelected!==nextState.categorySelected){\n      return true;\n    }\n    if(this.state===nextState) return false;\n    return true;\n  } \n\n  componentDidMount() {\n      this.mount =true;\n  }\n\n  componentDidUpdate() {\n    if(this.state.categorySelected!==false && this.state.onExtendMain === false)\n    {\n      store.dispatch({type:\"EXTEND_MAIN\", onExtendMain: true})   \n    }\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Header></Header>\n        <Nav categoryArr={this.state.categoryArr}></Nav>\n        {this.state.onExtendMain?<Main noteArr={this.state.noteArr}></Main>:null}\n        {this.state.onExtendNavMod? <WholeNavModal categoryArr={this.state.categoryArr} /> : null}\n      </div>\n    )\n\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}